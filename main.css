/*! tailwindcss v4.1.1 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
  @layer base {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
@layer theme {
  :root, :host {
    --font-sans: "Montserrat", sans serif;
    --font-serif: "Yeseva One display", serif;
    --font-mono: "Inconsolata", mono;
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-amber-950: oklch(27.9% 0.077 45.635);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-950: oklch(28.6% 0.066 53.813);
    --color-lime-300: oklch(89.7% 0.196 126.665);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-lime-600: oklch(64.8% 0.2 131.684);
    --color-lime-700: oklch(53.2% 0.157 131.589);
    --color-lime-950: oklch(27.4% 0.072 132.109);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-700: oklch(50.8% 0.118 165.612);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-900: oklch(38.6% 0.063 188.416);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-cyan-950: oklch(30.2% 0.056 229.695);
    --color-sky-50: oklch(97.7% 0.013 236.62);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-300: oklch(81.1% 0.111 293.571);
    --color-violet-400: oklch(70.2% 0.183 293.541);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-violet-900: oklch(38% 0.189 293.745);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-fuchsia-200: oklch(90.3% 0.076 319.62);
    --color-fuchsia-300: oklch(83.3% 0.145 321.434);
    --color-fuchsia-400: oklch(74% 0.238 322.16);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-fuchsia-600: oklch(59.1% 0.293 322.896);
    --color-fuchsia-700: oklch(51.8% 0.253 323.949);
    --color-fuchsia-900: oklch(40.1% 0.17 325.612);
    --color-pink-200: oklch(89.9% 0.061 343.231);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: oklch(81% 0.117 11.638);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-50: oklch(98.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-xl: 1.25rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -0.025em;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-xl: 24px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-display: "Bebas Neue", serif;
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or
    (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]),
  ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .diff {
    position: relative;
    display: grid;
    width: 100%;
    overflow: hidden;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    direction: ltr;
    container-type: inline-size;
    grid-template-columns: auto 1fr;
    &:focus-visible, &:has(.diff-item-1:focus) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
    }
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
      .diff-resizer {
        min-width: 90cqi;
        max-width: 90cqi;
      }
    }
    &:has(.diff-item-2:focus-visible) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      .diff-resizer {
        min-width: 10cqi;
        max-width: 10cqi;
      }
    }
    @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
      &:focus {
        .diff-resizer {
          min-width: 10cqi;
          max-width: 10cqi;
        }
      }
      &:has(.diff-item-1:focus) {
        .diff-resizer {
          min-width: 90cqi;
          max-width: 90cqi;
        }
      }
    }
  }
  .\@container {
    container-type: inline-size;
  }
  .modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: transform 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
    &::backdrop {
      display: none;
    }
    &.modal-open, &[open], &:target {
      background-color: oklch(0% 0 0/ 0.4);
      transition: transform 0.3s ease-out, background-color 0.3s ease-out, opacity 0.1s ease-out;
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      .modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
    @starting-style {
      &.modal-open, &[open], &:target {
        visibility: hidden;
        opacity: 0%;
      }
    }
  }
  .tooltip {
    position: relative;
    display: inline-block;
    --tt-bg: var(--color-neutral);
    --tt-off: calc(100% + 0.5rem);
    --tt-tail: calc(100% + 1px + 0.25rem);
    > :where(.tooltip-content), &[data-tip]:before {
      position: absolute;
      max-width: 20rem;
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
      text-align: center;
      white-space: normal;
      color: var(--color-neutral-content);
      opacity: 0%;
      font-size: 0.875rem;
      line-height: 1.25em;
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      background-color: var(--tt-bg);
      width: -moz-max-content;
      width: max-content;
      pointer-events: none;
      z-index: 1;
      --tw-content: attr(data-tip);
      content: var(--tw-content);
    }
    &:after {
      position: absolute;
      position: absolute;
      opacity: 0%;
      background-color: var(--tt-bg);
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      content: "";
      pointer-events: none;
      width: 0.625rem;
      height: 0.25rem;
      display: block;
      -webkit-mask-repeat: no-repeat;
              mask-repeat: no-repeat;
      -webkit-mask-position: -1px 0;
              mask-position: -1px 0;
      --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
      -webkit-mask-image: var(--mask-tooltip);
              mask-image: var(--mask-tooltip);
    }
    &.tooltip-open, &[data-tip]:hover, &:hover, &:has(:focus-visible) {
      > .tooltip-content, &[data-tip]:before, &:after {
        opacity: 100%;
        --tt-pos: 0rem;
        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      }
    }
    > .tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
      inset: auto auto var(--tt-off) 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
      inset: auto auto var(--tt-tail) 50%;
    }
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
    &:is(input[type="radio"]) {
      min-width: -moz-fit-content;
      min-width: fit-content;
      &:after {
        content: attr(aria-label);
      }
    }
    &:is(label) {
      position: relative;
      input {
        position: absolute;
        inset: calc(0.25rem * 0);
        cursor: pointer;
        -webkit-appearance: none;
           -moz-appearance: none;
                appearance: none;
        opacity: 0%;
      }
    }
    &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected="true"]) {
      & + .tab-content {
        display: block;
        height: 100%;
      }
    }
    &:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
      color: color-mix(in srgb, var(--color-base-content) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:not(input):empty {
      flex-grow: 1;
      cursor: default;
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible, &:is(label:has(:checked:focus-visible)) {
      outline: 2px solid currentColor;
      outline-offset: -5px;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .menu {
    display: flex;
    width: -moz-fit-content;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
      &.menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      cursor: pointer;
      background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
        }
      }
      &.menu-disabled {
        pointer-events: none;
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    .dropdown:focus-within {
      .menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .dock {
    position: fixed;
    right: calc(0.25rem * 0);
    bottom: calc(0.25rem * 0);
    left: calc(0.25rem * 0);
    z-index: 1;
    display: flex;
    width: 100%;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 2);
    color: currentColor;
    border-top: 0.5px solid color-mix(in srgb, var(--color-base-content) 5%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
    }
    height: 4rem;
    height: calc(4rem + env(safe-area-inset-bottom));
    padding-bottom: env(safe-area-inset-bottom);
    > * {
      position: relative;
      margin-bottom: calc(0.25rem * 2);
      display: flex;
      height: 100%;
      max-width: calc(0.25rem * 32);
      flex-shrink: 1;
      flex-basis: 100%;
      cursor: pointer;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 1px;
      border-radius: var(--radius-box);
      background-color: transparent;
      transition: opacity 0.2s ease-out;
      &:where(.dock-active) {
        &:after {
          content: "";
          position: absolute;
          height: calc(0.25rem * 1);
          width: calc(0.25rem * 10);
          border-radius: calc(infinity * 1px);
          background-color: currentColor;
          bottom: 0.2rem;
          border-top: 3px solid;
        }
      }
      @media (hover: hover) {
        &:hover {
          opacity: 80%;
        }
      }
      &[aria-disabled="true"], &[disabled] {
        &, &:hover {
          pointer-events: none;
          color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          opacity: 100%;
        }
      }
      .dock-label {
        font-size: 0.6875rem;
      }
    }
  }
  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
    & > *:not(summary):focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .dropdown-content {
      position: absolute;
    }
    &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) {
      .dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .dropdown-content {
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @starting-style {
      &[popover], .dropdown-content {
        scale: 95%;
        opacity: 0;
      }
    }
    &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {
      > [tabindex]:first-child {
        pointer-events: none;
      }
      .dropdown-content {
        opacity: 100%;
      }
    }
    &.dropdown-hover:hover {
      .dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.dropdown-open, &:focus, &:focus-within {
      .dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    --btn-noise: var(--fx-noise);
    .prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: color-mix(in srgb, var(--btn-color, var(--color-base-200)), #000 7%);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible {
      outline-width: 2px;
      outline-style: solid;
    }
    &:active:not(.btn-active) {
      translate: 0 0.5px;
      --btn-bg: color-mix(in srgb, var(--btn-color, var(--color-base-200)), #000 5%);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
      }
      --btn-border: color-mix(in srgb, var(--btn-color, var(--color-base-200)), #000 7%);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      &:not(.btn-link, .btn-ghost) {
        background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: color-mix(in srgb, var(--color-base-content) 20%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: color-mix(in srgb, var(--color-neutral) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --btn-border: #0000;
          --btn-fg: color-mix(in srgb, var(--color-base-content) 20%, #0000);
          @supports (color: color-mix(in lab, red, red)) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.filter .btn)) {
      --btn-color: var(--color-primary);
      --btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    -webkit-mask-size: 100%;
            mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
            mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    &:not(td, tr, colgroup) {
      visibility: visible;
    }
    position: relative;
    display: grid;
    overflow: hidden;
    border-radius: var(--radius-box, 1rem);
    width: 100%;
    grid-template-rows: max-content 0fr;
    transition: grid-template-rows 0.2s;
    > input:is([type="checkbox"], [type="radio"]) {
      grid-column-start: 1;
      grid-row-start: 1;
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      opacity: 0;
      z-index: 1;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 3.75rem;
      transition: background-color 0.2s ease-out;
    }
    &:is([open], :focus:not(.collapse-close)), &:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
      grid-template-rows: max-content 1fr;
    }
    &:is([open], :focus:not(.collapse-close)) > .collapse-content, &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
      visibility: visible;
      min-height: -moz-fit-content;
      min-height: fit-content;
    }
    &:focus-visible, &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
      outline-color: var(--color-base-content);
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
    }
    &:not(.collapse-close) {
      > input[type="checkbox"], > input[type="radio"]:not(:checked), > .collapse-title {
        cursor: pointer;
      }
    }
    &:focus:not(.collapse-close, .collapse[open]) > .collapse-title {
      cursor: unset;
    }
    &:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
      padding-bottom: 1rem;
      transition: padding 0.2s ease-out, background-color 0.2s ease-out;
    }
    &:is([open]) {
      &.collapse-arrow {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
    }
    &.collapse-open {
      &.collapse-arrow {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.collapse-plus {
        > .collapse-title:after {
          content: "−";
        }
      }
    }
    &.collapse-arrow:focus:not(.collapse-close) {
      > .collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &.collapse-arrow:not(.collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &[open] {
      &.collapse-plus {
        > .collapse-title:after {
          content: "−";
        }
      }
    }
    &.collapse-plus:focus:not(.collapse-close) {
      > .collapse-title:after {
        content: "−";
      }
    }
    &.collapse-plus:not(.collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
        content: "−";
      }
    }
    &:is(details) {
      width: 100%;
      & summary {
        position: relative;
        display: block;
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &:is(details) summary {
      outline: none;
    }
  }
  .validator {
    &:user-valid, &:has(:user-valid) {
      &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
        --input-color: var(--color-success);
      }
    }
    &:user-invalid, &:has(:user-invalid) {
      &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
        --input-color: var(--color-error);
      }
      & ~ .validator-hint {
        visibility: visible;
        display: block;
        color: var(--color-error);
      }
    }
    & ~ .validator-hint {
      visibility: hidden;
    }
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .visible\! {
    visibility: visible !important;
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
    :where(.list-row) {
      --list-grid-cols: minmax(0, auto) 1fr;
      position: relative;
      display: grid;
      grid-auto-flow: column;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 4);
      word-break: break-word;
      grid-template-columns: var(--list-grid-cols);
      &:has(.list-col-grow:nth-child(1)) {
        --list-grid-cols: 1fr;
      }
      &:has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
      }
      :not(.list-col-wrap) {
        grid-row-start: 1;
      }
    }
    & > :not(:last-child) {
      &.list-row, .list-row {
        &:after {
          content: "";
          border-bottom: var(--border) solid;
          inset-inline: var(--radius-box);
          position: absolute;
          bottom: calc(0.25rem * 0);
          border-color: color-mix(in srgb, var(--color-base-content) 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
          }
        }
      }
    }
  }
  .list\! {
    display: flex !important;
    flex-direction: column !important;
    font-size: 0.875rem !important;
    :where(.list-row) {
      --list-grid-cols: minmax(0, auto) 1fr !important;
      position: relative !important;
      display: grid !important;
      grid-auto-flow: column !important;
      gap: calc(0.25rem * 4) !important;
      border-radius: var(--radius-box) !important;
      padding: calc(0.25rem * 4) !important;
      word-break: break-word !important;
      grid-template-columns: var(--list-grid-cols) !important;
      &:has(.list-col-grow:nth-child(1)) {
        --list-grid-cols: 1fr !important;
      }
      &:has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr !important;
      }
      &:has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr !important;
      }
      &:has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr !important;
      }
      &:has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr !important;
      }
      &:has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr !important;
      }
      :not(.list-col-wrap) {
        grid-row-start: 1 !important;
      }
    }
    & > :not(:last-child) {
      &.list-row, .list-row {
        &:after {
          content: "" !important;
          border-bottom: var(--border) solid !important;
          inset-inline: var(--radius-box) !important;
          position: absolute !important;
          bottom: calc(0.25rem * 0) !important;
          border-color: color-mix(in srgb, var(--color-base-content) 5%, transparent) !important;
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent) !important;
          }
        }
      }
    }
  }
  .toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 0);
    top: auto;
    bottom: calc(0.25rem * 0);
    margin: calc(0.25rem * 4);
    display: flex;
    min-width: -moz-fit-content;
    min-width: fit-content;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    white-space: nowrap;
    translate: var(--toast-x, 0) var(--toast-y, 0);
    & > * {
      animation: toast 0.25s ease-out;
    }
    &:where(.toast-start) {
      inset-inline-start: calc(0.25rem * 0);
      inset-inline-end: auto;
      --toast-x: 0;
    }
    &:where(.toast-center) {
      inset-inline-start: calc(1/2 * 100%);
      inset-inline-end: calc(1/2 * 100%);
      --toast-x: -50%;
    }
    &:where(.toast-end) {
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 0);
      --toast-x: 0;
    }
    &:where(.toast-bottom) {
      top: auto;
      bottom: calc(0.25rem * 0);
      --toast-y: 0;
    }
    &:where(.toast-middle) {
      top: calc(1/2 * 100%);
      bottom: auto;
      --toast-y: -50%;
    }
    &:where(.toast-top) {
      top: calc(0.25rem * 0);
      bottom: auto;
      --toast-y: 0;
    }
  }
  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    padding: var(--toggle-p);
    box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: color-mix(in srgb, var(--color-base-content) 50%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    }
    --toggle-p: 0.1875rem;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
    height: var(--size);
    > * {
      z-index: 1;
      grid-column: span 1 / span 1;
      grid-column-start: 2;
      grid-row-start: 1;
      height: 100%;
      cursor: pointer;
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      background-color: transparent;
      padding: calc(0.25rem * 0.5);
      transition: opacity 0.2s, rotate 0.4s;
      border: none;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:nth-child(2) {
        color: var(--color-base-100);
        rotate: 0deg;
      }
      &:nth-child(3) {
        color: var(--color-base-100);
        opacity: 0%;
        rotate: -15deg;
      }
    }
    &:has(:checked) {
      > :nth-child(2) {
        opacity: 0%;
        rotate: 15deg;
      }
      > :nth-child(3) {
        opacity: 100%;
        rotate: 0deg;
      }
    }
    &:before {
      position: relative;
      inset-inline-start: calc(0.25rem * 0);
      grid-column-start: 2;
      grid-row-start: 1;
      aspect-ratio: 1 / 1;
      height: 100%;
      border-radius: var(--radius-selector);
      background-color: currentColor;
      translate: 0;
      --tw-content: "";
      content: var(--tw-content);
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    @media (forced-colors: active) {
      &:before {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
        outline-offset: calc(1px * -1);
      }
    }
    @media print {
      &:before {
        outline: 0.25rem solid;
        outline-offset: -1rem;
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr;
      background-color: var(--color-base-100);
      --input-color: var(--color-base-content);
      &:before {
        background-color: currentColor;
      }
      @starting-style {
        &:before {
          opacity: 0;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
      &:before {
        background-color: transparent;
        border: var(--border) solid currentColor;
      }
    }
  }
  .toggle\! {
    border: var(--border) solid currentColor !important;
    color: var(--input-color) !important;
    position: relative !important;
    display: inline-grid !important;
    flex-shrink: 0 !important;
    cursor: pointer !important;
    -webkit-appearance: none !important;
       -moz-appearance: none !important;
            appearance: none !important;
    place-content: center !important;
    vertical-align: middle !important;
    webkit-user-select: none !important;
    -webkit-user-select: none !important;
       -moz-user-select: none !important;
            user-select: none !important;
    grid-template-columns: 0fr 1fr 1fr !important;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  ) !important;
    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) ) !important;
    padding: var(--toggle-p) !important;
    box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset !important;
    transition: color 0.3s, grid-template-columns 0.2s !important;
    --input-color: color-mix(in srgb, var(--color-base-content) 50%, #0000) !important;
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000) !important;
    }
    --toggle-p: 0.1875rem !important;
    --size: calc(var(--size-selector, 0.25rem) * 6) !important;
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2) !important;
    height: var(--size) !important;
    > * {
      z-index: 1 !important;
      grid-column: span 1 / span 1 !important;
      grid-column-start: 2 !important;
      grid-row-start: 1 !important;
      height: 100% !important;
      cursor: pointer !important;
      -webkit-appearance: none !important;
         -moz-appearance: none !important;
              appearance: none !important;
      background-color: transparent !important;
      padding: calc(0.25rem * 0.5) !important;
      transition: opacity 0.2s, rotate 0.4s !important;
      border: none !important;
      &:focus {
        --tw-outline-style: none !important;
        outline-style: none !important;
        @media (forced-colors: active) {
          outline: 2px solid transparent !important;
          outline-offset: 2px !important;
        }
      }
      &:nth-child(2) {
        color: var(--color-base-100) !important;
        rotate: 0deg !important;
      }
      &:nth-child(3) {
        color: var(--color-base-100) !important;
        opacity: 0% !important;
        rotate: -15deg !important;
      }
    }
    &:has(:checked) {
      > :nth-child(2) {
        opacity: 0% !important;
        rotate: 15deg !important;
      }
      > :nth-child(3) {
        opacity: 100% !important;
        rotate: 0deg !important;
      }
    }
    &:before {
      position: relative !important;
      inset-inline-start: calc(0.25rem * 0) !important;
      grid-column-start: 2 !important;
      grid-row-start: 1 !important;
      aspect-ratio: 1 / 1 !important;
      height: 100% !important;
      border-radius: var(--radius-selector) !important;
      background-color: currentColor !important;
      translate: 0 !important;
      --tw-content: "" !important;
      content: var(--tw-content) !important;
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s !important;
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) !important;
      background-size: auto, calc(var(--noise) * 100%) !important;
      background-image: none, var(--fx-noise) !important;
    }
    @media (forced-colors: active) {
      &:before {
        outline-style: var(--tw-outline-style) !important;
        outline-width: 1px !important;
        outline-offset: calc(1px * -1) !important;
      }
    }
    @media print {
      &:before {
        outline: 0.25rem solid !important;
        outline-offset: -1rem !important;
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid currentColor !important;
      outline-offset: 2px !important;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr !important;
      background-color: var(--color-base-100) !important;
      --input-color: var(--color-base-content) !important;
      &:before {
        background-color: currentColor !important;
      }
      @starting-style {
        &:before {
          opacity: 0 !important;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr !important;
    }
    &:disabled {
      cursor: not-allowed !important;
      opacity: 30% !important;
      &:before {
        background-color: transparent !important;
        border: var(--border) solid currentColor !important;
      }
    }
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: color-mix(in srgb, var(--color-base-content) 20%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    &:where(input) {
      display: inline-flex;
    }
    :where(input) {
      display: inline-flex;
      height: 100%;
      width: 100%;
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where(input[type="date"]) {
      display: inline-block;
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in srgb, var(--color-base-content) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::-moz-placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      &::placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &::-webkit-calendar-picker-indicator {
      position: absolute;
      inset-inline-end: 0.75em;
    }
  }
  .input\! {
    cursor: text !important;
    border: var(--border) solid #0000 !important;
    position: relative !important;
    display: inline-flex !important;
    flex-shrink: 1 !important;
    -webkit-appearance: none !important;
       -moz-appearance: none !important;
            appearance: none !important;
    align-items: center !important;
    gap: calc(0.25rem * 2) !important;
    background-color: var(--color-base-100) !important;
    padding-inline: calc(0.25rem * 3) !important;
    vertical-align: middle !important;
    white-space: nowrap !important;
    width: clamp(3rem, 20rem, 100%) !important;
    height: var(--size) !important;
    font-size: 0.875rem !important;
    border-start-start-radius: var(--join-ss, var(--radius-field)) !important;
    border-start-end-radius: var(--join-se, var(--radius-field)) !important;
    border-end-start-radius: var(--join-es, var(--radius-field)) !important;
    border-end-end-radius: var(--join-ee, var(--radius-field)) !important;
    border-color: var(--input-color) !important;
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
    --size: calc(var(--size-field, 0.25rem) * 10) !important;
    --input-color: color-mix(in srgb, var(--color-base-content) 20%, #0000) !important;
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000) !important;
    }
    &:where(input) {
      display: inline-flex !important;
    }
    :where(input) {
      display: inline-flex !important;
      height: 100% !important;
      width: 100% !important;
      -webkit-appearance: none !important;
         -moz-appearance: none !important;
              appearance: none !important;
      background-color: transparent !important;
      border: none !important;
      &:focus, &:focus-within {
        --tw-outline-style: none !important;
        outline-style: none !important;
        @media (forced-colors: active) {
          outline: 2px solid transparent !important;
          outline-offset: 2px !important;
        }
      }
    }
    :where(input[type="date"]) {
      display: inline-block !important;
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content) !important;
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) !important;
      outline: 2px solid var(--input-color) !important;
      outline-offset: 2px !important;
      isolation: isolate !important;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed !important;
      border-color: var(--color-base-200) !important;
      background-color: var(--color-base-200) !important;
      color: color-mix(in srgb, var(--color-base-content) 40%, transparent) !important;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
      }
      &::-moz-placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent) !important;
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
        }
      }
      &::placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent) !important;
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
        }
      }
      box-shadow: none !important;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed !important;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit !important;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3) !important;
        margin-inline-end: calc(0.25rem * -3) !important;
      }
    }
    &::-webkit-calendar-picker-indicator {
      position: absolute !important;
      inset-inline-end: 0.75em !important;
    }
  }
  .indicator {
    position: relative;
    display: inline-flex;
    width: -moz-max-content;
    width: max-content;
    :where(.indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--inidicator-t, 0);
      bottom: var(--inidicator-b, auto);
      left: var(--inidicator-s, auto);
      right: var(--inidicator-e, 0);
      translate: var(--inidicator-x, 50%) var(--indicator-y, -50%);
    }
  }
  .table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
          }
        }
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
    }
    :where(thead, tfoot) {
      white-space: nowrap;
      color: color-mix(in srgb, var(--color-base-content) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      font-size: 0.875rem;
      font-weight: 600;
    }
    :where(tfoot) {
      border-top: var(--border) solid color-mix(in srgb, var(--color-base-content) 5%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid color-mix(in srgb, var(--color-base-content) 5%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
  }
  .steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr;
    .step {
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-columns: auto;
      grid-template-rows: repeat(2, minmax(0, 1fr));
      grid-template-rows: 40px 1fr;
      place-items: center;
      text-align: center;
      min-width: 4rem;
      --step-bg: var(--color-base-300);
      --step-fg: var(--color-base-content);
      &:before {
        top: calc(0.25rem * 0);
        grid-column-start: 1;
        grid-row-start: 1;
        height: calc(0.25rem * 2);
        width: 100%;
        border: 1px solid;
        color: var(--step-bg);
        background-color: var(--step-bg);
        --tw-content: "";
        content: var(--tw-content);
        margin-inline-start: -100%;
      }
      > .step-icon, &:not(:has(.step-icon)):after {
        content: counter(step);
        counter-increment: step;
        z-index: 1;
        color: var(--step-fg);
        background-color: var(--step-bg);
        border: 1px solid var(--step-bg);
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        display: grid;
        height: calc(0.25rem * 8);
        width: calc(0.25rem * 8);
        place-items: center;
        place-self: center;
        border-radius: calc(infinity * 1px);
      }
      &:first-child:before {
        content: none;
      }
      &[data-content]:after {
        content: attr(data-content);
      }
    }
    .step-neutral {
      + .step-neutral:before, &:after, > .step-icon {
        --step-bg: var(--color-neutral);
        --step-fg: var(--color-neutral-content);
      }
    }
    .step-primary {
      + .step-primary:before, &:after, > .step-icon {
        --step-bg: var(--color-primary);
        --step-fg: var(--color-primary-content);
      }
    }
    .step-secondary {
      + .step-secondary:before, &:after, > .step-icon {
        --step-bg: var(--color-secondary);
        --step-fg: var(--color-secondary-content);
      }
    }
    .step-accent {
      + .step-accent:before, &:after, > .step-icon {
        --step-bg: var(--color-accent);
        --step-fg: var(--color-accent-content);
      }
    }
    .step-info {
      + .step-info:before, &:after, > .step-icon {
        --step-bg: var(--color-info);
        --step-fg: var(--color-info-content);
      }
    }
    .step-success {
      + .step-success:before, &:after, > .step-icon {
        --step-bg: var(--color-success);
        --step-fg: var(--color-success-content);
      }
    }
    .step-warning {
      + .step-warning:before, &:after, > .step-icon {
        --step-bg: var(--color-warning);
        --step-fg: var(--color-warning-content);
      }
    }
    .step-error {
      + .step-error:before, &:after, > .step-icon {
        --step-bg: var(--color-error);
        --step-fg: var(--color-error-content);
      }
    }
  }
  .range {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    border: none;
    height: var(--range-thumb-size);
    [dir="rtl"] & {
      --range-dir: -1;
    }
    &:focus {
      outline: none;
    }
    &:focus-visible {
      outline: 2px solid;
      outline-offset: 2px;
    }
    &::-webkit-slider-runnable-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
    }
    @media (forced-colors: active) {
      &::-webkit-slider-runnable-track {
        border: 1px solid;
      }
    }
    @media (forced-colors: active) {
      &::-moz-range-track {
        border: 1px solid;
      }
    }
    &::-webkit-slider-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      -webkit-appearance: none;
              appearance: none;
      webkit-appearance: none;
      top: 50%;
      color: var(--range-progress);
      transform: translateY(-50%);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
    &::-moz-range-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
    }
    &::-moz-range-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      top: 50%;
      color: var(--range-progress);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
    }
  }
  .countdown {
    display: inline-flex;
    &.countdown {
      line-height: 1em;
    }
    & > * {
      display: inline-block;
      overflow-y: hidden;
      height: 1em;
      &:before {
        position: relative;
        content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
        white-space: pre;
        top: calc(var(--value) * -1em);
        text-align: center;
        transition: all 1s cubic-bezier(1, 0, 0, 1);
      }
    }
  }
  .timeline {
    position: relative;
    display: flex;
    > li {
      position: relative;
      display: grid;
      flex-shrink: 0;
      align-items: center;
      grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var( --timeline-row-end, minmax(0, 1fr) );
      grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var( --timeline-col-end, minmax(0, 1fr) );
      > hr {
        border: none;
        width: 100%;
        &:first-child {
          grid-column-start: 1;
          grid-row-start: 2;
        }
        &:last-child {
          grid-column-start: 3;
          grid-column-end: none;
          grid-row-start: 2;
          grid-row-end: auto;
        }
        @media print {
          border: 0.1px solid var(--color-base-300);
        }
      }
    }
    :where(hr) {
      height: calc(0.25rem * 1);
      background-color: var(--color-base-300);
    }
    &:has(.timeline-middle hr) {
      &:first-child {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
      }
      &:last-child {
        border-start-start-radius: var(--radius-selector);
        border-end-start-radius: var(--radius-selector);
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
    }
    &:not(:has(.timeline-middle)) {
      :first-child hr:last-child {
        border-start-start-radius: var(--radius-selector);
        border-end-start-radius: var(--radius-selector);
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
      :last-child hr:first-child {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
      }
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.image-full {
      display: grid;
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        -o-object-fit: cover;
           object-fit: cover;
        filter: brightness(28%);
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    input {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      border: none;
    }
    > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
      opacity: 100%;
    }
  }
  .swap\! {
    position: relative !important;
    display: inline-grid !important;
    cursor: pointer !important;
    place-content: center !important;
    vertical-align: middle !important;
    webkit-user-select: none !important;
    -webkit-user-select: none !important;
       -moz-user-select: none !important;
            user-select: none !important;
    input {
      -webkit-appearance: none !important;
         -moz-appearance: none !important;
              appearance: none !important;
      border: none !important;
    }
    > * {
      grid-column-start: 1 !important;
      grid-row-start: 1 !important;
      transition-property: transform, rotate, opacity !important;
      transition-duration: 0.2s !important;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1) !important;
    }
    .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
      opacity: 0% !important;
    }
    input:is(:checked, :indeterminate) {
      & ~ .swap-off {
        opacity: 0% !important;
      }
    }
    input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
      opacity: 100% !important;
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    border-color: var(--input-color);
    --input-color: color-mix(in srgb, var(--color-base-content) 20%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 10);
    [dir="rtl"] & {
      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
    }
    select {
      margin-inline-start: calc(0.25rem * -4);
      margin-inline-end: calc(0.25rem * -7);
      width: calc(100% + 2.75rem);
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      padding-inline-start: calc(0.25rem * 4);
      padding-inline-end: calc(0.25rem * 7);
      height: calc(100% - 2px);
      background: inherit;
      border-radius: inherit;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * -5.5);
        background-image: none;
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in srgb, var(--color-base-content) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::-moz-placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      &::placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
  }
  .avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & > div {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    img {
      height: 100%;
      width: 100%;
      -o-object-fit: cover;
         object-fit: cover;
    }
  }
  .checkbox {
    border: var(--border) solid var(--input-color, color-mix(in srgb, var(--color-base-content) 20%, #0000));
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, currentColor);
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid currentColor;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .rating {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & input {
      border: none;
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
    }
    :where(*) {
      animation: rating 0.25s ease-out;
      height: calc(0.25rem * 6);
      width: calc(0.25rem * 6);
      border-radius: 0;
      background-color: var(--color-base-content);
      opacity: 20%;
      &:is(input) {
        cursor: pointer;
      }
    }
    & .rating-hidden {
      width: calc(0.25rem * 2);
      background-color: transparent;
    }
    input[type="radio"]:checked {
      background-image: none;
    }
    * {
      &:checked, &[aria-checked="true"], &[aria-current="true"], &:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
        opacity: 100%;
      }
      &:focus-visible {
        transition: scale 0.2s ease-out;
        scale: 1.1;
      }
    }
    & *:active:focus {
      animation: none;
      scale: 1.1;
    }
    &.rating-xs :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 4);
      height: calc(0.25rem * 4);
    }
    &.rating-sm :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 5);
      height: calc(0.25rem * 5);
    }
    &.rating-md :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 6);
      height: calc(0.25rem * 6);
    }
    &.rating-lg :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 7);
      height: calc(0.25rem * 7);
    }
    &.rating-xl :where(*:not(.rating-hidden)) {
      width: calc(0.25rem * 8);
      height: calc(0.25rem * 8);
    }
  }
  .stats {
    position: relative;
    display: inline-grid;
    grid-auto-flow: column;
    overflow-x: auto;
    border-radius: var(--radius-box);
  }
  .progress {
    position: relative;
    height: calc(0.25rem * 2);
    width: 100%;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: color-mix(in oklab, currentColor 20%, transparent);
    color: var(--color-base-content);
    &:indeterminate {
      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
      background-size: 200%;
      background-position-x: 15%;
      animation: progress 5s ease-in-out infinite;
      @supports (-moz-appearance: none) {
        &::-moz-progress-bar {
          background-color: transparent;
          background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
          background-size: 200%;
          background-position-x: 15%;
          animation: progress 5s ease-in-out infinite;
        }
      }
    }
    @supports (-moz-appearance: none) {
      &::-moz-progress-bar {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
    @supports (-webkit-appearance: none) {
      &::-webkit-progress-bar {
        border-radius: var(--radius-box);
        background-color: transparent;
      }
      &::-webkit-progress-value {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .-inset-x-4 {
    inset-inline: calc(var(--spacing) * -4);
  }
  .inset-x-2 {
    inset-inline: calc(var(--spacing) * 2);
  }
  .-inset-y-6 {
    inset-block: calc(var(--spacing) * -6);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .inset-y-2 {
    inset-block: calc(var(--spacing) * 2);
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .start-50 {
    inset-inline-start: calc(var(--spacing) * 50);
  }
  .start-100 {
    inset-inline-start: calc(var(--spacing) * 100);
  }
  .dropdown-center {
    --anchor-h: center;
    :where(.dropdown-content) {
      inset-inline-end: calc(1/2 * 100%);
      translate: 50% 0;
    }
    &.dropdown-left {
      --anchor-h: left;
      --anchor-v: center;
      .dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
    &.dropdown-right {
      --anchor-h: right;
      --anchor-v: center;
      .dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .end-50 {
    inset-inline-end: calc(var(--spacing) * 50);
  }
  .end-100 {
    inset-inline-end: calc(var(--spacing) * 100);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-50 {
    top: calc(var(--spacing) * 50);
  }
  .top-100 {
    top: calc(var(--spacing) * 100);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .-bottom-2\.5 {
    bottom: calc(var(--spacing) * -2.5);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-50 {
    bottom: calc(var(--spacing) * 50);
  }
  .bottom-100 {
    bottom: calc(var(--spacing) * 100);
  }
  .-left-4 {
    left: calc(var(--spacing) * -4);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --input-color: color-mix(in srgb, var(--color-base-content) 20%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    textarea {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: color-mix(in srgb, var(--color-base-content) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::-moz-placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      &::placeholder {
        color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .stack {
    display: inline-grid;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    grid-template-rows: 3px 4px 1fr 4px 3px;
    & > * {
      height: 100%;
      width: 100%;
      &:nth-child(n + 2) {
        width: 100%;
        opacity: 70%;
      }
      &:nth-child(2) {
        z-index: 2;
        opacity: 90%;
      }
      &:nth-child(1) {
        z-index: 3;
        width: 100%;
      }
    }
    &, &.stack-bottom {
      > * {
        grid-column: 3 / 4;
        grid-row: 3 / 6;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 1 / 4;
        }
      }
    }
    &.stack-top {
      > * {
        grid-column: 3 / 4;
        grid-row: 1 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 3 / 6;
        }
      }
    }
    &.stack-start {
      > * {
        grid-column: 1 / 4;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 3 / 6;
          grid-row: 1 / 6;
        }
      }
    }
    &.stack-end {
      > * {
        grid-column: 3 / 6;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 4;
          grid-row: 1 / 6;
        }
      }
    }
  }
  .modal-backdrop {
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    align-self: stretch;
    justify-self: stretch;
    color: transparent;
    z-index: -1;
    button {
      cursor: pointer;
    }
  }
  .z-0 {
    z-index: 0;
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-3 {
    z-index: 3;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .tab-content {
    order: var(--tabcontent-order);
    display: none;
    border-color: transparent;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: 0;
    --tabcontent-radius-es: 0;
    --tabcontent-radius-ee: 0;
    --tabcontent-order: 1;
    width: 100%;
    margin: var(--tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--tabcontent-radius-ss);
    border-start-end-radius: var(--tabcontent-radius-se);
    border-end-start-radius: var(--tabcontent-radius-es);
    border-end-end-radius: var(--tabcontent-radius-ee);
  }
  .order-0 {
    order: 0;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .order-3 {
    order: 3;
  }
  .order-4 {
    order: 4;
  }
  .order-5 {
    order: 5;
  }
  .order-first {
    order: -9999;
  }
  .order-last {
    order: 9999;
  }
  .col-1 {
    grid-column: 1;
  }
  .col-2 {
    grid-column: 2;
  }
  .col-3 {
    grid-column: 3;
  }
  .col-4 {
    grid-column: 4;
  }
  .col-5 {
    grid-column: 5;
  }
  .col-6 {
    grid-column: 6;
  }
  .col-7 {
    grid-column: 7;
  }
  .col-8 {
    grid-column: 8;
  }
  .col-9 {
    grid-column: 9;
  }
  .col-10 {
    grid-column: 10;
  }
  .col-11 {
    grid-column: 11;
  }
  .col-12 {
    grid-column: 12;
  }
  .col-auto {
    grid-column: auto;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-5 {
    grid-column: span 5 / span 5;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
    & > * {
      grid-column-start: 1;
      grid-row-start: 1;
    }
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .col-start-5 {
    grid-column-start: 5;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .float-end {
    float: inline-end;
  }
  .float-none {
    float: none;
  }
  .float-start {
    float: inline-start;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .divider {
    display: flex;
    height: calc(0.25rem * 4);
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    white-space: nowrap;
    margin: var(--divider-m, 1rem 0);
    &:before, &:after {
      content: "";
      height: calc(0.25rem * 0.5);
      width: 100%;
      flex-grow: 1;
      background-color: color-mix(in srgb, var(--color-base-content) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
    }
    @media print {
      &:before, &:after {
        border: 0.5px solid;
      }
    }
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-3 {
    margin: calc(var(--spacing) * 3);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-5 {
    margin: calc(var(--spacing) * 5);
  }
  .m-58 {
    margin: calc(var(--spacing) * 58);
  }
  .m-125 {
    margin: calc(var(--spacing) * 125);
  }
  .m-185 {
    margin: calc(var(--spacing) * 185);
  }
  .m-214 {
    margin: calc(var(--spacing) * 214);
  }
  .m-322 {
    margin: calc(var(--spacing) * 322);
  }
  .m-374 {
    margin: calc(var(--spacing) * 374);
  }
  .m-571 {
    margin: calc(var(--spacing) * 571);
  }
  .m-750 {
    margin: calc(var(--spacing) * 750);
  }
  .m-800 {
    margin: calc(var(--spacing) * 800);
  }
  .m-812 {
    margin: calc(var(--spacing) * 812);
  }
  .m-auto {
    margin: auto;
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .-mx-\(--gutter\) {
    margin-inline: calc(var(--gutter) * -1);
  }
  .-mx-0\.5 {
    margin-inline: calc(var(--spacing) * -0.5);
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-3\.5 {
    margin-inline: calc(var(--spacing) * 3.5);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-5 {
    margin-inline: calc(var(--spacing) * 5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .my-auto {
    margin-block: auto;
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: color-mix(in oklab, currentColor 60%, transparent);
    &:has(input) {
      cursor: pointer;
    }
    &:is(.input > *, .select > *) {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      white-space: nowrap;
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
      }
    }
  }
  .label\! {
    display: inline-flex !important;
    align-items: center !important;
    gap: calc(0.25rem * 1.5) !important;
    white-space: nowrap !important;
    color: color-mix(in oklab, currentColor 60%, transparent) !important;
    &:has(input) {
      cursor: pointer !important;
    }
    &:is(.input > *, .select > *) {
      display: flex !important;
      height: calc(100% - 0.5rem) !important;
      align-items: center !important;
      padding-inline: calc(0.25rem * 3) !important;
      white-space: nowrap !important;
      font-size: inherit !important;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3) !important;
        margin-inline-end: calc(0.25rem * 3) !important;
        border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000) !important;
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3) !important;
        margin-inline-end: calc(0.25rem * -3) !important;
        border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000) !important;
      }
    }
  }
  .ms-0 {
    margin-inline-start: calc(var(--spacing) * 0);
  }
  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-3 {
    margin-inline-start: calc(var(--spacing) * 3);
  }
  .ms-4 {
    margin-inline-start: calc(var(--spacing) * 4);
  }
  .ms-5 {
    margin-inline-start: calc(var(--spacing) * 5);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .me-0 {
    margin-inline-end: calc(var(--spacing) * 0);
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .me-3 {
    margin-inline-end: calc(var(--spacing) * 3);
  }
  .me-4 {
    margin-inline-end: calc(var(--spacing) * 4);
  }
  .me-5 {
    margin-inline-end: calc(var(--spacing) * 5);
  }
  .me-auto {
    margin-inline-end: auto;
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-base {
    font-size: 1rem;
    line-height: 1.75;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose-base > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose-base > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose-base > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose-base > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose-base > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    :where(.prose-base > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-base > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-lg {
    font-size: 1.125rem;
    line-height: 1.7777778;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2222222em;
      line-height: 1.4545455;
      margin-top: 1.0909091em;
      margin-bottom: 1.0909091em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6666667em;
      margin-bottom: 1.6666667em;
      padding-inline-start: 1em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.6666667em;
      margin-top: 0;
      margin-bottom: 0.8333333em;
      line-height: 1;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.6666667em;
      margin-top: 1.8666667em;
      margin-bottom: 1.0666667em;
      line-height: 1.3333333;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.3333333em;
      margin-top: 1.6666667em;
      margin-bottom: 0.6666667em;
      line-height: 1.5;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 0.4444444em;
      line-height: 1.5555556;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      border-radius: 0.3125rem;
      padding-top: 0.2222222em;
      padding-inline-end: 0.4444444em;
      padding-bottom: 0.2222222em;
      padding-inline-start: 0.4444444em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8666667em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.75;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: 0.375rem;
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      padding-inline-start: 1.5em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5555556em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5555556em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6666667em;
      margin-bottom: 0.6666667em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4444444em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4444444em;
    }
    :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(.prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(.prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6666667em;
      padding-inline-start: 1.5555556em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 3.1111111em;
      margin-bottom: 3.1111111em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.5;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.5;
      margin-top: 1em;
    }
    :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2em;
      line-height: 1.5;
      margin-top: 1em;
      margin-bottom: 1em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1.0666667em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.8em;
      margin-top: 0;
      margin-bottom: 0.8571429em;
      line-height: 1;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.8em;
      margin-top: 1.5555556em;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.5em;
      margin-top: 1.6em;
      margin-bottom: 0.6666667em;
      line-height: 1.3333333;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.8em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      border-radius: 0.3125rem;
      padding-top: 0.25em;
      padding-inline-end: 0.4em;
      padding-bottom: 0.25em;
      padding-inline-start: 0.4em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8611111em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.7777778;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: 0.5rem;
      padding-top: 1.1111111em;
      padding-inline-end: 1.3333333em;
      padding-bottom: 1.1111111em;
      padding-inline-start: 1.3333333em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6em;
      margin-bottom: 0.6em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4em;
    }
    :where(.prose-xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    :where(.prose-xl > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(.prose-xl > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.2em;
    }
    :where(.prose-xl > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(.prose-xl > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.2em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6em;
      padding-inline-start: 1.6em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2.8em;
      margin-bottom: 2.8em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.5555556;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.6666667em;
      padding-bottom: 0.8888889em;
      padding-inline-start: 0.6666667em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.8888889em;
      padding-inline-end: 0.6666667em;
      padding-bottom: 0.8888889em;
      padding-inline-start: 0.6666667em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.5555556;
      margin-top: 1em;
    }
    :where(.prose-xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .-mt-4 {
    margin-top: calc(var(--spacing) * -4);
  }
  .-mt-8 {
    margin-top: calc(var(--spacing) * -8);
  }
  .-mt-12 {
    margin-top: calc(var(--spacing) * -12);
  }
  .-mt-16 {
    margin-top: calc(var(--spacing) * -16);
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-auto {
    margin-top: auto;
  }
  .-mb-3 {
    margin-bottom: calc(var(--spacing) * -3);
  }
  .-mb-6 {
    margin-bottom: calc(var(--spacing) * -6);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-auto {
    margin-bottom: auto;
  }
  .-ml-4 {
    margin-left: calc(var(--spacing) * -4);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2\.5 {
    margin-left: calc(var(--spacing) * 2.5);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .carousel-item {
    box-sizing: content-box;
    display: flex;
    flex: none;
    scroll-snap-align: start;
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: color-mix(in srgb, var(--color-base-content) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in srgb, #000 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--badge-fg);
    border: var(--border) solid var(--badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: -moz-fit-content;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-bg: var(--badge-color, var(--color-base-100));
    --badge-fg: var(--color-base-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
    &.badge-outline {
      --badge-fg: var(--badge-color);
      --badge-bg: #0000;
      background-image: none;
    }
    &.badge-dash {
      --badge-fg: var(--badge-color);
      --badge-bg: #0000;
      border-style: dashed;
      background-image: none;
    }
    &.badge-soft {
      color: var(--badge-color, var(--color-base-content));
      background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      background-image: none;
    }
  }
  .kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-field);
    background-color: var(--color-base-200);
    vertical-align: middle;
    padding-left: 0.5em;
    padding-right: 0.5em;
    border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    }
    border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
    }
    --size: calc(var(--size-selector, 0.25rem) * 6);
    font-size: 0.875rem;
    height: var(--size);
    min-width: var(--size);
  }
  .tabs {
    display: flex;
    flex-wrap: wrap;
    --tabs-height: auto;
    --tabs-direction: row;
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: calc(0.25rem * 4);
         column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
    & > * {
      display: grid;
      place-items: start;
      gap: calc(0.25rem * 2);
    }
    &.footer-center {
      grid-auto-flow: column dense;
      place-items: center;
      text-align: center;
      & > * {
        place-items: center;
      }
    }
  }
  .stat {
    display: inline-grid;
    width: 100%;
    -moz-column-gap: calc(0.25rem * 4);
         column-gap: calc(0.25rem * 4);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
    &:not(:last-child) {
      border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      border-block-end: none;
    }
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, 0.875rem);
    :where(p) {
      flex-grow: 1;
    }
  }
  .carousel {
    display: inline-flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in srgb, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
    &:has(:nth-child(2)) {
      grid-template-columns: auto minmax(auto, 1fr);
    }
    &.alert-outline {
      background-color: transparent;
      color: var(--alert-color);
      box-shadow: none;
      background-image: none;
    }
    &.alert-dash {
      background-color: transparent;
      color: var(--alert-color);
      border-style: dashed;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-base-content));
      background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    :where(.join-item) {
      border-start-start-radius: var(--join-ss, 0);
      border-start-end-radius: var(--join-se, 0);
      border-end-start-radius: var(--join-es, 0);
      border-end-end-radius: var(--join-ee, 0);
      * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:first-child) {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:where(:last-child) {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:only-child) {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
  }
  .chat {
    display: grid;
    -moz-column-gap: calc(0.25rem * 3);
         column-gap: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
  }
  .prose {
    :root & {
      --tw-prose-body: color-mix(in srgb, var(--color-base-content) 80%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: color-mix(in srgb, var(--color-base-content) 50%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-hr: color-mix(in srgb, var(--color-base-content) 20%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: color-mix(in srgb, var(--color-base-content) 20%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-captions: color-mix(in srgb, var(--color-base-content) 50%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: color-mix(in srgb, var(--color-base-content) 50%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-td-borders: color-mix(in srgb, var(--color-base-content) 20%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-kbd: color-mix(in srgb, var(--color-base-content) 80%, #0000);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .mask {
    display: inline-block;
    vertical-align: middle;
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
  }
  .mask\! {
    display: inline-block !important;
    vertical-align: middle !important;
    -webkit-mask-size: contain !important;
            mask-size: contain !important;
    -webkit-mask-repeat: no-repeat !important;
            mask-repeat: no-repeat !important;
    -webkit-mask-position: center !important;
            mask-position: center !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .size-1 {
    width: calc(var(--spacing) * 1);
    height: calc(var(--spacing) * 1);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-\[1\.125rem\] {
    width: 1.125rem;
    height: 1.125rem;
  }
  .size-\[1\.1875rem\] {
    width: 1.1875rem;
    height: 1.1875rem;
  }
  .size-\[max\(100\%\,2\.75rem\)\] {
    width: max(100%, 2.75rem);
    height: max(100%, 2.75rem);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-18 {
    height: calc(var(--spacing) * 18);
  }
  .h-25 {
    height: calc(var(--spacing) * 25);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-75 {
    height: calc(var(--spacing) * 75);
  }
  .h-84 {
    height: calc(var(--spacing) * 84);
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-11 {
    min-height: calc(var(--spacing) * 11);
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-svh {
    min-height: 100svh;
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-25 {
    width: calc(var(--spacing) * 25);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-75 {
    width: calc(var(--spacing) * 75);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-\[2\.25rem\] {
    width: 2.25rem;
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: -moz-max-content;
    width: max-content;
  }
  .w-px {
    width: 1px;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .max-w-screen-sm {
    max-width: var(--breakpoint-sm);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-\[2\.25rem\] {
    min-width: 2.25rem;
  }
  .min-w-\[2ch\] {
    min-width: 2ch;
  }
  .min-w-\[calc\(var\(--button-width\)\+1\.75rem\)\] {
    min-width: calc(var(--button-width) + 1.75rem);
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .flex-shrink-1 {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .flex-grow-0 {
    flex-grow: 0;
  }
  .flex-grow-1 {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-0 {
    flex-basis: calc(var(--spacing) * 0);
  }
  .caption-top {
    caption-side: top;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .rotate-270 {
    rotate: 270deg;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-300);
    @media (prefers-reduced-motion: reduce) {
      transition-duration: 15s;
    }
    will-change: background-position;
    animation: skeleton 1.8s ease-in-out infinite;
    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
  .cursor-col-resize {
    cursor: col-resize;
  }
  .cursor-crosshair {
    cursor: crosshair;
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-e-resize {
    cursor: e-resize;
  }
  .cursor-ew-resize {
    cursor: ew-resize;
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-move {
    cursor: move;
  }
  .cursor-n-resize {
    cursor: n-resize;
  }
  .cursor-ne-resize {
    cursor: ne-resize;
  }
  .cursor-ns-resize {
    cursor: ns-resize;
  }
  .cursor-nw-resize {
    cursor: nw-resize;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-row-resize {
    cursor: row-resize;
  }
  .cursor-s-resize {
    cursor: s-resize;
  }
  .cursor-se-resize {
    cursor: se-resize;
  }
  .cursor-sw-resize {
    cursor: sw-resize;
  }
  .cursor-w-resize {
    cursor: w-resize;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-y {
    resize: vertical;
  }
  .scroll-py-1 {
    scroll-padding-block: calc(var(--spacing) * 1);
  }
  .appearance-none {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
  }
  .\[columns\:colspec\] {
    -moz-columns: colspec;
         columns: colspec;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-\[--spacing\(5\)_1fr\] {
    grid-template-columns: calc(var(--spacing) * 5) 1fr;
  }
  .grid-cols-\[1\.125rem_1fr\] {
    grid-template-columns: 1.125rem 1fr;
  }
  .grid-cols-\[1fr_auto\] {
    grid-template-columns: 1fr auto;
  }
  .grid-cols-\[auto_1fr_1\.5rem_0\.5rem_auto\] {
    grid-template-columns: auto 1fr 1.5rem 0.5rem auto;
  }
  .grid-rows-\[1fr_auto\] {
    grid-template-rows: 1fr auto;
  }
  .grid-rows-\[1fr_auto_1fr\] {
    grid-template-rows: 1fr auto 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-16 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 16) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1\.5 {
    -moz-column-gap: calc(var(--spacing) * 1.5);
         column-gap: calc(var(--spacing) * 1.5);
  }
  .gap-x-2 {
    -moz-column-gap: calc(var(--spacing) * 2);
         column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-4 {
    -moz-column-gap: calc(var(--spacing) * 4);
         column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-8 {
    -moz-column-gap: calc(var(--spacing) * 8);
         column-gap: calc(var(--spacing) * 8);
  }
  .gap-x-10 {
    -moz-column-gap: calc(var(--spacing) * 10);
         column-gap: calc(var(--spacing) * 10);
  }
  .gap-x-12 {
    -moz-column-gap: calc(var(--spacing) * 12);
         column-gap: calc(var(--spacing) * 12);
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .self-center {
    align-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-scroll {
    overflow: scroll;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .overflow-x-visible {
    overflow-x: visible;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .overflow-y-visible {
    overflow-y: visible;
  }
  .overscroll-contain {
    overscroll-behavior: contain;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\(--avatar-radius\) {
    border-radius: var(--avatar-radius);
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-\[0\.3125rem\] {
    border-radius: 0.3125rem;
  }
  .rounded-\[20\%\] {
    border-radius: 20%;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-3xl {
    border-top-left-radius: var(--radius-3xl);
    border-top-right-radius: var(--radius-3xl);
  }
  .rounded-l-md {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-5 {
    border-style: var(--tw-border-style);
    border-width: 5px;
  }
  .border-\[4\.5px\] {
    border-style: var(--tw-border-style);
    border-width: 4.5px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .alert-info {
    border-color: var(--color-info);
    color: var(--color-info-content);
    --alert-color: var(--color-info);
  }
  .alert-success {
    border-color: var(--color-success);
    color: var(--color-success-content);
    --alert-color: var(--color-success);
  }
  .alert-warning {
    border-color: var(--color-warning);
    color: var(--color-warning-content);
    --alert-color: var(--color-warning);
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black\/15 {
    border-color: color-mix(in srgb, #000 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 15%, transparent);
    }
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-info {
    border-color: var(--color-info);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-warning {
    border-color: var(--color-warning);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-zinc-200 {
    border-color: var(--color-zinc-200);
  }
  .border-zinc-950\/5 {
    border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
    }
  }
  .border-zinc-950\/10 {
    border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .border-zinc-950\/15 {
    border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
    }
  }
  .border-b-zinc-950\/10 {
    border-bottom-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-bottom-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .border-l-zinc-950\/5 {
    border-left-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-left-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
    }
  }
  .glass {
    border: none;
    -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
            backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
  .table-zebra {
    tbody {
      tr {
        &:nth-child(even) {
          background-color: var(--color-base-200);
          :where(.table-pin-cols tr th) {
            background-color: var(--color-base-200);
          }
        }
        &.row-hover {
          &, &:nth-child(even) {
            &:hover {
              @media (hover: hover) {
                background-color: var(--color-base-300);
              }
            }
          }
        }
      }
    }
  }
  .bg-\(--btn-border\) {
    background-color: var(--btn-border);
  }
  .bg-\(--radio-indicator\) {
    background-color: var(--radio-indicator);
  }
  .bg-amber-400\/20 {
    background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-400) 20%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-blue-500\/15 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 15%, transparent);
    }
  }
  .bg-cyan-400\/20 {
    background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cyan-400) 20%, transparent);
    }
  }
  .bg-emerald-500\/15 {
    background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-500) 15%, transparent);
    }
  }
  .bg-fuchsia-400\/15 {
    background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-fuchsia-400) 15%, transparent);
    }
  }
  .bg-green-500\/15 {
    background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-500) 15%, transparent);
    }
  }
  .bg-indigo-500\/15 {
    background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-500) 15%, transparent);
    }
  }
  .bg-info {
    background-color: var(--color-info);
  }
  .bg-lime-400\/20 {
    background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-lime-400) 20%, transparent);
    }
  }
  .bg-orange-500\/15 {
    background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-orange-500) 15%, transparent);
    }
  }
  .bg-pink-400\/15 {
    background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-pink-400) 15%, transparent);
    }
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-purple-500\/15 {
    background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-500) 15%, transparent);
    }
  }
  .bg-red-500\/15 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 15%, transparent);
    }
  }
  .bg-rose-400\/15 {
    background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-rose-400) 15%, transparent);
    }
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-sky-500\/15 {
    background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-500) 15%, transparent);
    }
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-teal-500\/15 {
    background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-teal-500) 15%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-violet-500\/15 {
    background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-violet-500) 15%, transparent);
    }
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/75 {
    background-color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .bg-yellow-400\/20 {
    background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-yellow-400) 20%, transparent);
    }
  }
  .bg-zinc-50 {
    background-color: var(--color-zinc-50);
  }
  .bg-zinc-100 {
    background-color: var(--color-zinc-100);
  }
  .bg-zinc-200 {
    background-color: var(--color-zinc-200);
  }
  .bg-zinc-600 {
    background-color: var(--color-zinc-600);
  }
  .bg-zinc-600\/10 {
    background-color: color-mix(in srgb, oklch(44.2% 0.017 285.786) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-600) 10%, transparent);
    }
  }
  .bg-zinc-950 {
    background-color: var(--color-zinc-950);
  }
  .bg-zinc-950\/5 {
    background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
    }
  }
  .bg-zinc-950\/10 {
    background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .bg-zinc-950\/15 {
    background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
    }
  }
  .bg-zinc-950\/25 {
    background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-950) 25%, transparent);
    }
  }
  .bg-zinc-950\/\[2\.5\%\] {
    background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
    }
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-zinc-50 {
    --tw-gradient-to: var(--color-zinc-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .mask-repeat {
    -webkit-mask-repeat: repeat;
            mask-repeat: repeat;
  }
  .fill-current {
    fill: currentColor;
  }
  .stroke-\(--checkbox-check\) {
    stroke: var(--checkbox-check);
  }
  .stroke-current {
    stroke: currentColor;
  }
  .stroke-zinc-500 {
    stroke: var(--color-zinc-500);
  }
  .p-\(--gutter\) {
    padding: var(--gutter);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-\[3px\] {
    padding: 3px;
  }
  .p-\[5\%\] {
    padding: 5%;
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-0\.5 {
    padding-inline: calc(var(--spacing) * 0.5);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-\[calc\(--spacing\(3\.5\)-1px\)\] {
    padding-inline: calc(calc(var(--spacing) * 3.5) - 1px);
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-\[calc\(--spacing\(2\.5\)-1px\)\] {
    padding-block: calc(calc(var(--spacing) * 2.5) - 1px);
  }
  .ps-0 {
    padding-inline-start: calc(var(--spacing) * 0);
  }
  .ps-1 {
    padding-inline-start: calc(var(--spacing) * 1);
  }
  .ps-2 {
    padding-inline-start: calc(var(--spacing) * 2);
  }
  .ps-3 {
    padding-inline-start: calc(var(--spacing) * 3);
  }
  .ps-4 {
    padding-inline-start: calc(var(--spacing) * 4);
  }
  .ps-5 {
    padding-inline-start: calc(var(--spacing) * 5);
  }
  .pe-0 {
    padding-inline-end: calc(var(--spacing) * 0);
  }
  .pe-1 {
    padding-inline-end: calc(var(--spacing) * 1);
  }
  .pe-2 {
    padding-inline-end: calc(var(--spacing) * 2);
  }
  .pe-3 {
    padding-inline-end: calc(var(--spacing) * 3);
  }
  .pe-4 {
    padding-inline-end: calc(var(--spacing) * 4);
  }
  .pe-5 {
    padding-inline-end: calc(var(--spacing) * 5);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-2\.5 {
    padding-top: calc(var(--spacing) * 2.5);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3\.5 {
    padding-right: calc(var(--spacing) * 3.5);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pr-\[calc\(--spacing\(7\)-1px\)\] {
    padding-right: calc(calc(var(--spacing) * 7) - 1px);
  }
  .pr-\[calc\(--spacing\(10\)-1px\)\] {
    padding-right: calc(calc(var(--spacing) * 10) - 1px);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3\.5 {
    padding-left: calc(var(--spacing) * 3.5);
  }
  .pl-\[calc\(--spacing\(3\.5\)-1px\)\] {
    padding-left: calc(calc(var(--spacing) * 3.5) - 1px);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-start {
    text-align: start;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-text-bottom {
    vertical-align: text-bottom;
  }
  .align-text-top {
    vertical-align: text-top;
  }
  .align-top {
    vertical-align: top;
  }
  .font-display {
    font-family: var(--font-display);
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .font-serif {
    font-family: var(--font-serif);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-2xl\/8 {
    font-size: var(--text-2xl);
    line-height: calc(var(--spacing) * 8);
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-8xl {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-base\/6 {
    font-size: var(--text-base);
    line-height: calc(var(--spacing) * 6);
  }
  .text-base\/7 {
    font-size: var(--text-base);
    line-height: calc(var(--spacing) * 7);
  }
  .text-lg\/6 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 6);
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/5 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 5);
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-xs\/6 {
    font-size: var(--text-xs);
    line-height: calc(var(--spacing) * 6);
  }
  .text-\[48px\] {
    font-size: 48px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .link-info {
    color: var(--color-info);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in srgb, var(--color-info) 80%, #000);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-info) 80%, #000);
        }
      }
    }
  }
  .link-primary {
    color: var(--color-primary);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in srgb, var(--color-primary) 80%, #000);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-primary) 80%, #000);
        }
      }
    }
  }
  .link-secondary {
    color: var(--color-secondary);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in srgb, var(--color-secondary) 80%, #000);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-secondary) 80%, #000);
        }
      }
    }
  }
  .link-success {
    color: var(--color-success);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in srgb, var(--color-success) 80%, #000);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-success) 80%, #000);
        }
      }
    }
  }
  .link-warning {
    color: var(--color-warning);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in srgb, var(--color-warning) 80%, #000);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-warning) 80%, #000);
        }
      }
    }
  }
  .text-amber-700 {
    color: var(--color-amber-700);
  }
  .text-amber-950 {
    color: var(--color-amber-950);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-current {
    color: currentColor;
  }
  .text-cyan-700 {
    color: var(--color-cyan-700);
  }
  .text-cyan-950 {
    color: var(--color-cyan-950);
  }
  .text-emerald-700 {
    color: var(--color-emerald-700);
  }
  .text-fuchsia-700 {
    color: var(--color-fuchsia-700);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-indigo-700 {
    color: var(--color-indigo-700);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-lime-700 {
    color: var(--color-lime-700);
  }
  .text-lime-950 {
    color: var(--color-lime-950);
  }
  .text-orange-700 {
    color: var(--color-orange-700);
  }
  .text-pink-700 {
    color: var(--color-pink-700);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-purple-700 {
    color: var(--color-purple-700);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-rose-700 {
    color: var(--color-rose-700);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-sky-700 {
    color: var(--color-sky-700);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-teal-500 {
    color: var(--color-teal-500);
  }
  .text-teal-700 {
    color: var(--color-teal-700);
  }
  .text-violet-700 {
    color: var(--color-violet-700);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .text-yellow-950 {
    color: var(--color-yellow-950);
  }
  .text-zinc-400 {
    color: var(--color-zinc-400);
  }
  .text-zinc-500 {
    color: var(--color-zinc-500);
  }
  .text-zinc-600 {
    color: var(--color-zinc-600);
  }
  .text-zinc-700 {
    color: var(--color-zinc-700);
  }
  .text-zinc-800 {
    color: var(--color-zinc-800);
  }
  .text-zinc-950 {
    color: var(--color-zinc-950);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .btn-link {
    text-decoration-line: underline;
    outline-color: currentColor;
    --btn-border: #0000;
    --btn-bg: #0000;
    --btn-fg: var(--color-primary);
    --btn-noise: none;
    --btn-shadow: "";
    &:is(.btn-active, :hover, :active:focus, :focus-visible) {
      text-decoration-line: underline;
      --btn-border: #0000;
      --btn-bg: #0000;
    }
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-black\/15 {
    text-decoration-color: color-mix(in srgb, #000 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-black) 15%, transparent);
    }
  }
  .decoration-zinc-950\/50 {
    text-decoration-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--color-zinc-950) 50%, transparent);
    }
  }
  .underline-offset-2 {
    text-underline-offset: 2px;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/animate\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/dom\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/json\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/object\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/test\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow\/util\.cljs {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-black\/5 {
    --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-zinc-950\/5 {
    --tw-ring-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
    }
  }
  .ring-zinc-950\/10 {
    --tw-ring-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .-outline-offset-1 {
    outline-offset: calc(1px * -1);
  }
  .outline-black\/\(--ring-opacity\) {
    outline-color: color-mix(in srgb, #000 var(--ring-opacity), transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-black) var(--ring-opacity), transparent);
    }
  }
  .outline-transparent {
    outline-color: transparent;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-0 {
    --tw-duration: 0ms;
    transition-duration: 0ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-transform {
    will-change: transform;
  }
  .forced-color-adjust-none {
    forced-color-adjust: none;
  }
  .btn-lg {
    --fontsize: 1.125rem;
    --btn-p: 1.25rem;
    --size: calc(var(--size-field, 0.25rem) * 12);
  }
  .btn-sm {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
  .badge-primary {
    --badge-color: var(--color-primary);
    --badge-fg: var(--color-primary-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
         user-select: none;
  }
  .\[--anchor-gap\:--spacing\(2\)\] {
    --anchor-gap: calc(var(--spacing) * 2);
  }
  .\[--anchor-offset\:-1\.625rem\] {
    --anchor-offset: -1.625rem;
  }
  .\[--anchor-padding\:--spacing\(1\)\] {
    --anchor-padding: calc(var(--spacing) * 1);
  }
  .\[--anchor-padding\:--spacing\(4\)\] {
    --anchor-padding: calc(var(--spacing) * 4);
  }
  .\[--avatar-radius\:20\%\] {
    --avatar-radius: 20%;
  }
  .\[--btn-bg\:var\(--color-amber-400\)\] {
    --btn-bg: var(--color-amber-400);
  }
  .\[--btn-bg\:var\(--color-blue-600\)\] {
    --btn-bg: var(--color-blue-600);
  }
  .\[--btn-bg\:var\(--color-cyan-300\)\] {
    --btn-bg: var(--color-cyan-300);
  }
  .\[--btn-bg\:var\(--color-emerald-600\)\] {
    --btn-bg: var(--color-emerald-600);
  }
  .\[--btn-bg\:var\(--color-fuchsia-500\)\] {
    --btn-bg: var(--color-fuchsia-500);
  }
  .\[--btn-bg\:var\(--color-green-600\)\] {
    --btn-bg: var(--color-green-600);
  }
  .\[--btn-bg\:var\(--color-indigo-500\)\] {
    --btn-bg: var(--color-indigo-500);
  }
  .\[--btn-bg\:var\(--color-lime-300\)\] {
    --btn-bg: var(--color-lime-300);
  }
  .\[--btn-bg\:var\(--color-orange-500\)\] {
    --btn-bg: var(--color-orange-500);
  }
  .\[--btn-bg\:var\(--color-pink-500\)\] {
    --btn-bg: var(--color-pink-500);
  }
  .\[--btn-bg\:var\(--color-purple-500\)\] {
    --btn-bg: var(--color-purple-500);
  }
  .\[--btn-bg\:var\(--color-red-600\)\] {
    --btn-bg: var(--color-red-600);
  }
  .\[--btn-bg\:var\(--color-rose-500\)\] {
    --btn-bg: var(--color-rose-500);
  }
  .\[--btn-bg\:var\(--color-sky-500\)\] {
    --btn-bg: var(--color-sky-500);
  }
  .\[--btn-bg\:var\(--color-teal-600\)\] {
    --btn-bg: var(--color-teal-600);
  }
  .\[--btn-bg\:var\(--color-violet-500\)\] {
    --btn-bg: var(--color-violet-500);
  }
  .\[--btn-bg\:var\(--color-yellow-300\)\] {
    --btn-bg: var(--color-yellow-300);
  }
  .\[--btn-bg\:var\(--color-zinc-600\)\] {
    --btn-bg: var(--color-zinc-600);
  }
  .\[--btn-bg\:var\(--color-zinc-900\)\] {
    --btn-bg: var(--color-zinc-900);
  }
  .\[--btn-bg\:white\] {
    --btn-bg: white;
  }
  .\[--btn-border\:var\(--color-amber-500\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-blue-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-cyan-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-emerald-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-fuchsia-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-green-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-indigo-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-lime-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-orange-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-pink-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-purple-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-red-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-rose-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-sky-600\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-teal-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-violet-600\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-yellow-400\)\]\/80 {
    --btn-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-zinc-700\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-zinc-950\)\]\/10 {
    --btn-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .\[--btn-border\:var\(--color-zinc-950\)\]\/90 {
    --btn-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--color-zinc-950) 90%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-white\)\]\/10 {
    --btn-hover-overlay: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-white\)\]\/25 {
    --btn-hover-overlay: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .\[--btn-hover-overlay\:var\(--color-zinc-950\)\]\/\[2\.5\%\] {
    --btn-hover-overlay: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-hover-overlay: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
    }
  }
  .\[--btn-icon\:var\(--color-amber-600\)\] {
    --btn-icon: var(--color-amber-600);
  }
  .\[--btn-icon\:var\(--color-blue-400\)\] {
    --btn-icon: var(--color-blue-400);
  }
  .\[--btn-icon\:var\(--color-cyan-500\)\] {
    --btn-icon: var(--color-cyan-500);
  }
  .\[--btn-icon\:var\(--color-fuchsia-300\)\] {
    --btn-icon: var(--color-fuchsia-300);
  }
  .\[--btn-icon\:var\(--color-indigo-300\)\] {
    --btn-icon: var(--color-indigo-300);
  }
  .\[--btn-icon\:var\(--color-lime-600\)\] {
    --btn-icon: var(--color-lime-600);
  }
  .\[--btn-icon\:var\(--color-orange-300\)\] {
    --btn-icon: var(--color-orange-300);
  }
  .\[--btn-icon\:var\(--color-pink-300\)\] {
    --btn-icon: var(--color-pink-300);
  }
  .\[--btn-icon\:var\(--color-purple-300\)\] {
    --btn-icon: var(--color-purple-300);
  }
  .\[--btn-icon\:var\(--color-red-300\)\] {
    --btn-icon: var(--color-red-300);
  }
  .\[--btn-icon\:var\(--color-rose-300\)\] {
    --btn-icon: var(--color-rose-300);
  }
  .\[--btn-icon\:var\(--color-violet-300\)\] {
    --btn-icon: var(--color-violet-300);
  }
  .\[--btn-icon\:var\(--color-white\)\]\/60 {
    --btn-icon: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-icon: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .\[--btn-icon\:var\(--color-yellow-600\)\] {
    --btn-icon: var(--color-yellow-600);
  }
  .\[--btn-icon\:var\(--color-zinc-400\)\] {
    --btn-icon: var(--color-zinc-400);
  }
  .\[--btn-icon\:var\(--color-zinc-500\)\] {
    --btn-icon: var(--color-zinc-500);
  }
  .\[--checkbox-check\:var\(--color-amber-950\)\] {
    --checkbox-check: var(--color-amber-950);
  }
  .\[--checkbox-check\:var\(--color-cyan-950\)\] {
    --checkbox-check: var(--color-cyan-950);
  }
  .\[--checkbox-check\:var\(--color-lime-950\)\] {
    --checkbox-check: var(--color-lime-950);
  }
  .\[--checkbox-check\:var\(--color-white\)\] {
    --checkbox-check: var(--color-white);
  }
  .\[--checkbox-check\:var\(--color-yellow-950\)\] {
    --checkbox-check: var(--color-yellow-950);
  }
  .\[--checkbox-check\:var\(--color-zinc-900\)\] {
    --checkbox-check: var(--color-zinc-900);
  }
  .\[--checkbox-checked-bg\:var\(--color-amber-400\)\] {
    --checkbox-checked-bg: var(--color-amber-400);
  }
  .\[--checkbox-checked-bg\:var\(--color-blue-600\)\] {
    --checkbox-checked-bg: var(--color-blue-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-cyan-300\)\] {
    --checkbox-checked-bg: var(--color-cyan-300);
  }
  .\[--checkbox-checked-bg\:var\(--color-emerald-600\)\] {
    --checkbox-checked-bg: var(--color-emerald-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-fuchsia-500\)\] {
    --checkbox-checked-bg: var(--color-fuchsia-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-green-600\)\] {
    --checkbox-checked-bg: var(--color-green-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-indigo-500\)\] {
    --checkbox-checked-bg: var(--color-indigo-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-lime-300\)\] {
    --checkbox-checked-bg: var(--color-lime-300);
  }
  .\[--checkbox-checked-bg\:var\(--color-orange-500\)\] {
    --checkbox-checked-bg: var(--color-orange-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-pink-500\)\] {
    --checkbox-checked-bg: var(--color-pink-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-purple-500\)\] {
    --checkbox-checked-bg: var(--color-purple-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-red-600\)\] {
    --checkbox-checked-bg: var(--color-red-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-rose-500\)\] {
    --checkbox-checked-bg: var(--color-rose-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-sky-500\)\] {
    --checkbox-checked-bg: var(--color-sky-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-teal-600\)\] {
    --checkbox-checked-bg: var(--color-teal-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-violet-500\)\] {
    --checkbox-checked-bg: var(--color-violet-500);
  }
  .\[--checkbox-checked-bg\:var\(--color-white\)\] {
    --checkbox-checked-bg: var(--color-white);
  }
  .\[--checkbox-checked-bg\:var\(--color-yellow-300\)\] {
    --checkbox-checked-bg: var(--color-yellow-300);
  }
  .\[--checkbox-checked-bg\:var\(--color-zinc-600\)\] {
    --checkbox-checked-bg: var(--color-zinc-600);
  }
  .\[--checkbox-checked-bg\:var\(--color-zinc-900\)\] {
    --checkbox-checked-bg: var(--color-zinc-900);
  }
  .\[--checkbox-checked-border\:var\(--color-amber-500\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-blue-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-cyan-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-emerald-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-fuchsia-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-green-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-indigo-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-lime-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-orange-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-pink-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-purple-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-red-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-rose-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-sky-600\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-teal-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-violet-600\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-yellow-400\)\]\/80 {
    --checkbox-checked-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-zinc-700\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-zinc-950\)\]\/15 {
    --checkbox-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
    }
  }
  .\[--checkbox-checked-border\:var\(--color-zinc-950\)\]\/90 {
    --checkbox-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --checkbox-checked-border: color-mix(in oklab, var(--color-zinc-950) 90%, transparent);
    }
  }
  .\[--gutter\:--spacing\(8\)\] {
    --gutter: calc(var(--spacing) * 8);
  }
  .\[--radio-checked-bg\:var\(--color-amber-400\)\] {
    --radio-checked-bg: var(--color-amber-400);
  }
  .\[--radio-checked-bg\:var\(--color-blue-600\)\] {
    --radio-checked-bg: var(--color-blue-600);
  }
  .\[--radio-checked-bg\:var\(--color-cyan-300\)\] {
    --radio-checked-bg: var(--color-cyan-300);
  }
  .\[--radio-checked-bg\:var\(--color-emerald-600\)\] {
    --radio-checked-bg: var(--color-emerald-600);
  }
  .\[--radio-checked-bg\:var\(--color-fuchsia-500\)\] {
    --radio-checked-bg: var(--color-fuchsia-500);
  }
  .\[--radio-checked-bg\:var\(--color-green-600\)\] {
    --radio-checked-bg: var(--color-green-600);
  }
  .\[--radio-checked-bg\:var\(--color-indigo-500\)\] {
    --radio-checked-bg: var(--color-indigo-500);
  }
  .\[--radio-checked-bg\:var\(--color-lime-300\)\] {
    --radio-checked-bg: var(--color-lime-300);
  }
  .\[--radio-checked-bg\:var\(--color-orange-500\)\] {
    --radio-checked-bg: var(--color-orange-500);
  }
  .\[--radio-checked-bg\:var\(--color-pink-500\)\] {
    --radio-checked-bg: var(--color-pink-500);
  }
  .\[--radio-checked-bg\:var\(--color-purple-500\)\] {
    --radio-checked-bg: var(--color-purple-500);
  }
  .\[--radio-checked-bg\:var\(--color-red-600\)\] {
    --radio-checked-bg: var(--color-red-600);
  }
  .\[--radio-checked-bg\:var\(--color-rose-500\)\] {
    --radio-checked-bg: var(--color-rose-500);
  }
  .\[--radio-checked-bg\:var\(--color-sky-500\)\] {
    --radio-checked-bg: var(--color-sky-500);
  }
  .\[--radio-checked-bg\:var\(--color-teal-600\)\] {
    --radio-checked-bg: var(--color-teal-600);
  }
  .\[--radio-checked-bg\:var\(--color-violet-500\)\] {
    --radio-checked-bg: var(--color-violet-500);
  }
  .\[--radio-checked-bg\:var\(--color-white\)\] {
    --radio-checked-bg: var(--color-white);
  }
  .\[--radio-checked-bg\:var\(--color-yellow-300\)\] {
    --radio-checked-bg: var(--color-yellow-300);
  }
  .\[--radio-checked-bg\:var\(--color-zinc-600\)\] {
    --radio-checked-bg: var(--color-zinc-600);
  }
  .\[--radio-checked-bg\:var\(--color-zinc-900\)\] {
    --radio-checked-bg: var(--color-zinc-900);
  }
  .\[--radio-checked-border\:var\(--color-amber-500\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-blue-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-cyan-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-emerald-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(50.8% 0.118 165.612) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-emerald-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-fuchsia-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-green-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-indigo-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-lime-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-orange-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-pink-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-purple-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-red-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-rose-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-sky-600\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-teal-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-violet-600\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-yellow-400\)\]\/80 {
    --radio-checked-border: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-zinc-700\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-zinc-950\)\]\/15 {
    --radio-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
    }
  }
  .\[--radio-checked-border\:var\(--color-zinc-950\)\]\/90 {
    --radio-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --radio-checked-border: color-mix(in oklab, var(--color-zinc-950) 90%, transparent);
    }
  }
  .\[--radio-checked-indicator\:var\(--color-amber-950\)\] {
    --radio-checked-indicator: var(--color-amber-950);
  }
  .\[--radio-checked-indicator\:var\(--color-cyan-950\)\] {
    --radio-checked-indicator: var(--color-cyan-950);
  }
  .\[--radio-checked-indicator\:var\(--color-lime-950\)\] {
    --radio-checked-indicator: var(--color-lime-950);
  }
  .\[--radio-checked-indicator\:var\(--color-white\)\] {
    --radio-checked-indicator: var(--color-white);
  }
  .\[--radio-checked-indicator\:var\(--color-yellow-950\)\] {
    --radio-checked-indicator: var(--color-yellow-950);
  }
  .\[--radio-checked-indicator\:var\(--color-zinc-900\)\] {
    --radio-checked-indicator: var(--color-zinc-900);
  }
  .\[--radio-indicator\:transparent\] {
    --radio-indicator: transparent;
  }
  .\[--ring-opacity\:20\%\] {
    --ring-opacity: 20%;
  }
  .\[--switch-bg-ring\:var\(--color-amber-500\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-black\)\]\/15 {
    --switch-bg-ring: color-mix(in srgb, #000 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-black) 15%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-blue-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-cyan-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(78.9% 0.154 211.53) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-cyan-400) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-emerald-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-fuchsia-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-green-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-indigo-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-lime-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(84.1% 0.238 128.85) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-lime-400) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-orange-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-pink-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-purple-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-red-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-rose-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-sky-600\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-teal-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-violet-600\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-yellow-400\)\]\/80 {
    --switch-bg-ring: color-mix(in srgb, oklch(85.2% 0.199 91.936) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-yellow-400) 80%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-zinc-700\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
    }
  }
  .\[--switch-bg-ring\:var\(--color-zinc-950\)\]\/90 {
    --switch-bg-ring: color-mix(in srgb, oklch(14.1% 0.005 285.823) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-bg-ring: color-mix(in oklab, var(--color-zinc-950) 90%, transparent);
    }
  }
  .\[--switch-bg\:var\(--color-amber-400\)\] {
    --switch-bg: var(--color-amber-400);
  }
  .\[--switch-bg\:var\(--color-blue-600\)\] {
    --switch-bg: var(--color-blue-600);
  }
  .\[--switch-bg\:var\(--color-cyan-300\)\] {
    --switch-bg: var(--color-cyan-300);
  }
  .\[--switch-bg\:var\(--color-emerald-500\)\] {
    --switch-bg: var(--color-emerald-500);
  }
  .\[--switch-bg\:var\(--color-fuchsia-500\)\] {
    --switch-bg: var(--color-fuchsia-500);
  }
  .\[--switch-bg\:var\(--color-green-600\)\] {
    --switch-bg: var(--color-green-600);
  }
  .\[--switch-bg\:var\(--color-indigo-500\)\] {
    --switch-bg: var(--color-indigo-500);
  }
  .\[--switch-bg\:var\(--color-lime-300\)\] {
    --switch-bg: var(--color-lime-300);
  }
  .\[--switch-bg\:var\(--color-orange-500\)\] {
    --switch-bg: var(--color-orange-500);
  }
  .\[--switch-bg\:var\(--color-pink-500\)\] {
    --switch-bg: var(--color-pink-500);
  }
  .\[--switch-bg\:var\(--color-purple-500\)\] {
    --switch-bg: var(--color-purple-500);
  }
  .\[--switch-bg\:var\(--color-red-600\)\] {
    --switch-bg: var(--color-red-600);
  }
  .\[--switch-bg\:var\(--color-rose-500\)\] {
    --switch-bg: var(--color-rose-500);
  }
  .\[--switch-bg\:var\(--color-sky-500\)\] {
    --switch-bg: var(--color-sky-500);
  }
  .\[--switch-bg\:var\(--color-teal-600\)\] {
    --switch-bg: var(--color-teal-600);
  }
  .\[--switch-bg\:var\(--color-violet-500\)\] {
    --switch-bg: var(--color-violet-500);
  }
  .\[--switch-bg\:var\(--color-yellow-300\)\] {
    --switch-bg: var(--color-yellow-300);
  }
  .\[--switch-bg\:var\(--color-zinc-600\)\] {
    --switch-bg: var(--color-zinc-600);
  }
  .\[--switch-bg\:var\(--color-zinc-900\)\] {
    --switch-bg: var(--color-zinc-900);
  }
  .\[--switch-bg\:white\] {
    --switch-bg: white;
  }
  .\[--switch-ring\:transparent\] {
    --switch-ring: transparent;
  }
  .\[--switch-ring\:var\(--color-blue-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(48.8% 0.243 264.376) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-blue-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-emerald-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-fuchsia-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.1% 0.293 322.896) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-fuchsia-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-green-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(52.7% 0.154 150.069) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-green-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-indigo-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(51.1% 0.262 276.966) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-indigo-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-orange-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(64.6% 0.222 41.116) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-orange-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-pink-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(59.2% 0.249 0.584) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-pink-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-purple-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(55.8% 0.288 302.321) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-purple-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-red-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(50.5% 0.213 27.518) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-red-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-rose-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(58.6% 0.253 17.585) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-rose-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-sky-600\)\]\/80 {
    --switch-ring: color-mix(in srgb, oklch(58.8% 0.158 241.966) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-sky-600) 80%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-teal-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(51.1% 0.096 186.391) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-teal-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-violet-600\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(54.1% 0.281 293.009) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-violet-600) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-zinc-700\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
    }
  }
  .\[--switch-ring\:var\(--color-zinc-950\)\]\/90 {
    --switch-ring: color-mix(in srgb, oklch(14.1% 0.005 285.823) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-ring: color-mix(in oklab, var(--color-zinc-950) 90%, transparent);
    }
  }
  .\[--switch-shadow\:transparent\] {
    --switch-shadow: transparent;
  }
  .\[--switch-shadow\:var\(--color-black\)\]\/10 {
    --switch-shadow: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-blue-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-emerald-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(37.8% 0.077 168.94) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-emerald-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-fuchsia-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.1% 0.17 325.612) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-fuchsia-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-green-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.3% 0.095 152.535) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-indigo-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(35.9% 0.144 278.697) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-indigo-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-orange-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.8% 0.123 38.172) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-pink-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(40.8% 0.153 2.432) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-pink-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-purple-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38.1% 0.176 304.987) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-purple-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-red-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.6% 0.141 25.723) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-rose-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(41% 0.159 10.272) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-rose-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-sky-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(39.1% 0.09 240.876) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-sky-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-teal-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38.6% 0.063 188.416) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-teal-900) 20%, transparent);
    }
  }
  .\[--switch-shadow\:var\(--color-violet-900\)\]\/20 {
    --switch-shadow: color-mix(in srgb, oklch(38% 0.189 293.745) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --switch-shadow: color-mix(in oklab, var(--color-violet-900) 20%, transparent);
    }
  }
  .\[--switch\:var\(--color-amber-950\)\] {
    --switch: var(--color-amber-950);
  }
  .\[--switch\:var\(--color-cyan-950\)\] {
    --switch: var(--color-cyan-950);
  }
  .\[--switch\:var\(--color-lime-950\)\] {
    --switch: var(--color-lime-950);
  }
  .\[--switch\:var\(--color-yellow-950\)\] {
    --switch: var(--color-yellow-950);
  }
  .\[--switch\:var\(--color-zinc-950\)\] {
    --switch: var(--color-zinc-950);
  }
  .\[--switch\:white\] {
    --switch: white;
  }
  .\[below\:auto\] {
    below: auto;
  }
  .\[index\:auto\] {
    index: auto;
  }
  .\[raise\:dimen\] {
    raise: dimen;
  }
  .\[style\:string\] {
    style: string;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .\*\:col-start-1 {
    :is(& > *) {
      grid-column-start: 1;
    }
  }
  .\*\:row-start-1 {
    :is(& > *) {
      grid-row-start: 1;
    }
  }
  .\*\:w-full {
    :is(& > *) {
      width: 100%;
    }
  }
  .\*\:rounded-\(--avatar-radius\) {
    :is(& > *) {
      border-radius: var(--avatar-radius);
    }
  }
  .\*\:rounded-full {
    :is(& > *) {
      border-radius: calc(infinity * 1px);
    }
  }
  .group-hover\:scale-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-has-data-disabled\:stroke-zinc-600 {
    &:is(:where(.group):has(*[data-disabled]) *) {
      stroke: var(--color-zinc-600);
    }
  }
  .group-data-active\:border-zinc-950\/20 {
    &:is(:where(.group)[data-active] *) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .group-data-checked\:translate-x-4 {
    &:is(:where(.group)[data-checked] *) {
      --tw-translate-x: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-data-checked\:border-transparent {
    &:is(:where(.group)[data-checked] *) {
      border-color: transparent;
    }
  }
  .group-data-checked\:bg-\(--checkbox-checked-border\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--checkbox-checked-border);
    }
  }
  .group-data-checked\:bg-\(--radio-checked-border\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--radio-checked-border);
    }
  }
  .group-data-checked\:bg-\(--switch\) {
    &:is(:where(.group)[data-checked] *) {
      background-color: var(--switch);
    }
  }
  .group-data-checked\:opacity-100 {
    &:is(:where(.group)[data-checked] *) {
      opacity: 100%;
    }
  }
  .group-data-checked\:shadow-\(--switch-shadow\) {
    &:is(:where(.group)[data-checked] *) {
      --tw-shadow: var(--switch-shadow);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-checked\:ring-\(--switch-ring\) {
    &:is(:where(.group)[data-checked] *) {
      --tw-ring-color: var(--switch-ring);
    }
  }
  .group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    &:is(:where(.group)[data-checked] *) {
      --radio-indicator: var(--radio-checked-indicator);
    }
  }
  .group-data-disabled\:border-zinc-950\/20 {
    &:is(:where(.group)[data-disabled] *) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .group-data-disabled\:border-zinc-950\/25 {
    &:is(:where(.group)[data-disabled] *) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 25%, transparent);
      }
    }
  }
  .group-data-disabled\:bg-zinc-950\/5 {
    &:is(:where(.group)[data-disabled] *) {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .group-data-disabled\:stroke-zinc-600 {
    &:is(:where(.group)[data-disabled] *) {
      stroke: var(--color-zinc-600);
    }
  }
  .group-data-disabled\:opacity-50 {
    &:is(:where(.group)[data-disabled] *) {
      opacity: 50%;
    }
  }
  .group-data-disabled\:opacity-100 {
    &:is(:where(.group)[data-disabled] *) {
      opacity: 100%;
    }
  }
  .group-data-disabled\:\[--checkbox-check\:var\(--color-zinc-950\)\]\/50 {
    &:is(:where(.group)[data-disabled] *) {
      --checkbox-check: color-mix(in srgb, oklch(14.1% 0.005 285.823) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --checkbox-check: color-mix(in oklab, var(--color-zinc-950) 50%, transparent);
      }
    }
  }
  .group-data-disabled\:\[--radio-checked-indicator\:var\(--color-zinc-950\)\]\/50 {
    &:is(:where(.group)[data-disabled] *) {
      --radio-checked-indicator: color-mix(in srgb, oklch(14.1% 0.005 285.823) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-checked-indicator: color-mix(in oklab, var(--color-zinc-950) 50%, transparent);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:bg-white {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        background-color: var(--color-white);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:shadow-sm {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-data-checked\:group-data-disabled\:ring-black\/5 {
    &:is(:where(.group)[data-checked] *) {
      &:is(:where(.group)[data-disabled] *) {
        --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .group-data-focus\:text-white {
    &:is(:where(.group)[data-focus] *) {
      color: var(--color-white);
    }
  }
  .group-data-focus\:outline {
    &:is(:where(.group)[data-focus] *) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .group-data-focus\:outline-2 {
    &:is(:where(.group)[data-focus] *) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .group-data-focus\:outline-offset-2 {
    &:is(:where(.group)[data-focus] *) {
      outline-offset: 2px;
    }
  }
  .group-data-focus\:outline-blue-500 {
    &:is(:where(.group)[data-focus] *) {
      outline-color: var(--color-blue-500);
    }
  }
  .group-data-focus\/option\:text-white {
    &:is(:where(.group\/option)[data-focus] *) {
      color: var(--color-white);
    }
  }
  .group-data-hover\:border-zinc-950\/20 {
    &:is(:where(.group)[data-hover] *) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .group-data-hover\:border-zinc-950\/30 {
    &:is(:where(.group)[data-hover] *) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-amber-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-amber-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-blue-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-cyan-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-cyan-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-emerald-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-fuchsia-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-fuchsia-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-green-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-indigo-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-indigo-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-lime-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-lime-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-orange-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-orange-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-pink-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-pink-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-purple-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-purple-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-red-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-red-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-rose-400\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-rose-400) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-sky-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-teal-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-teal-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-violet-500\/25 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-violet-500) 25%, transparent);
      }
    }
  }
  .group-data-hover\:bg-yellow-400\/30 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-yellow-400) 30%, transparent);
      }
    }
  }
  .group-data-hover\:bg-zinc-600\/20 {
    &:is(:where(.group)[data-hover] *) {
      background-color: color-mix(in srgb, oklch(44.2% 0.017 285.786) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-600) 20%, transparent);
      }
    }
  }
  .group-data-hover\:\[--radio-indicator\:var\(--color-zinc-900\)\]\/10 {
    &:is(:where(.group)[data-hover] *) {
      --radio-indicator: color-mix(in srgb, oklch(21% 0.006 285.885) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-indicator: color-mix(in oklab, var(--color-zinc-900) 10%, transparent);
      }
    }
  }
  .group-data-hover\:group-data-checked\:border-transparent {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-checked] *) {
        border-color: transparent;
      }
    }
  }
  .group-data-hover\:group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-checked] *) {
        --radio-indicator: var(--radio-checked-indicator);
      }
    }
  }
  .group-data-indeterminate\:opacity-0 {
    &:is(:where(.group)[data-indeterminate] *) {
      opacity: 0%;
    }
  }
  .group-data-indeterminate\:opacity-100 {
    &:is(:where(.group)[data-indeterminate] *) {
      opacity: 100%;
    }
  }
  .group-data-invalid\:border-red-500 {
    &:is(:where(.group)[data-invalid] *) {
      border-color: var(--color-red-500);
    }
  }
  .group-data-hover\:group-data-invalid\:border-red-500 {
    &:is(:where(.group)[data-hover] *) {
      &:is(:where(.group)[data-invalid] *) {
        border-color: var(--color-red-500);
      }
    }
  }
  .group-data-selected\/option\:inline {
    &:is(:where(.group\/option)[data-selected] *) {
      display: inline;
    }
  }
  .placeholder\:text-zinc-500 {
    &::-moz-placeholder {
      color: var(--color-zinc-500);
    }
    &::placeholder {
      color: var(--color-zinc-500);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:-inset-px {
    &::before {
      content: var(--tw-content);
      inset: -1px;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:inset-px {
    &::before {
      content: var(--tw-content);
      inset: 1px;
    }
  }
  .before\:-z-10 {
    &::before {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
  }
  .before\:w-2 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 2);
    }
  }
  .before\:min-w-0 {
    &::before {
      content: var(--tw-content);
      min-width: calc(var(--spacing) * 0);
    }
  }
  .before\:shrink {
    &::before {
      content: var(--tw-content);
      flex-shrink: 1;
    }
  }
  .before\:rounded-\[calc\(0\.3125rem-1px\)\] {
    &::before {
      content: var(--tw-content);
      border-radius: calc(0.3125rem - 1px);
    }
  }
  .before\:rounded-\[calc\(var\(--radius-lg\)-1px\)\] {
    &::before {
      content: var(--tw-content);
      border-radius: calc(var(--radius-lg) - 1px);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:rounded-lg {
    &::before {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .before\:bg-\(--btn-bg\) {
    &::before {
      content: var(--tw-content);
      background-color: var(--btn-bg);
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:bg-zinc-950\/5 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .before\:shadow-sm {
    &::before {
      content: var(--tw-content);
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .group-data-checked\:before\:bg-\(--checkbox-checked-bg\) {
    &:is(:where(.group)[data-checked] *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--checkbox-checked-bg);
      }
    }
  }
  .group-data-checked\:before\:bg-\(--radio-checked-bg\) {
    &:is(:where(.group)[data-checked] *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--radio-checked-bg);
      }
    }
  }
  .group-data-disabled\:before\:bg-transparent {
    &:is(:where(.group)[data-disabled] *) {
      &::before {
        content: var(--tw-content);
        background-color: transparent;
      }
    }
  }
  .after\:pointer-events-none {
    &::after {
      content: var(--tw-content);
      pointer-events: none;
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:inset-0 {
    &::after {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .after\:-z-10 {
    &::after {
      content: var(--tw-content);
      z-index: calc(10 * -1);
    }
  }
  .after\:-translate-x-4 {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: calc(var(--spacing) * -4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:translate-y-2 {
    &::after {
      content: var(--tw-content);
      --tw-translate-y: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:rotate-180 {
    &::after {
      content: var(--tw-content);
      rotate: 180deg;
    }
  }
  .after\:rounded-\[calc\(0\.3125rem-1px\)\] {
    &::after {
      content: var(--tw-content);
      border-radius: calc(0.3125rem - 1px);
    }
  }
  .after\:rounded-\[calc\(var\(--radius-lg\)-1px\)\] {
    &::after {
      content: var(--tw-content);
      border-radius: calc(var(--radius-lg) - 1px);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:rounded-lg {
    &::after {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .after\:bg-gradient-to-tr {
    &::after {
      content: var(--tw-content);
      --tw-gradient-position: to top right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .after\:from-amber-500 {
    &::after {
      content: var(--tw-content);
      --tw-gradient-from: var(--color-amber-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:to-sky-500 {
    &::after {
      content: var(--tw-content);
      --tw-gradient-to: var(--color-sky-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:shadow-\[inset_0_1px_--theme\(--color-white\/15\%\)\] {
    &::after {
      content: var(--tw-content);
      --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in srgb, #fff 15%, transparent));
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in oklab, var(--color-white) 15%, transparent));
      }
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .after\:shadow-\[shadow\:inset_0_1px_--theme\(--color-white\/15\%\)\] {
    &::after {
      content: var(--tw-content);
      --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in srgb, #fff 15%, transparent));
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow: inset 0 1px var(--tw-shadow-color, color-mix(in oklab, var(--color-white) 15%, transparent));
      }
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .after\:ring-transparent {
    &::after {
      content: var(--tw-content);
      --tw-ring-color: transparent;
    }
  }
  .after\:ring-inset {
    &::after {
      content: var(--tw-content);
      --tw-ring-inset: inset;
    }
  }
  .first\:ml-0 {
    &:first-child {
      margin-left: calc(var(--spacing) * 0);
    }
  }
  .first\:border-l-0 {
    &:first-child {
      border-left-style: var(--tw-border-style);
      border-left-width: 0px;
    }
  }
  .first\:border-none {
    &:first-child {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .first\:pl-\(--gutter\,--spacing\(2\)\) {
    &:first-child {
      padding-left: var(--gutter,calc(var(--spacing) * 2));
    }
  }
  .last\:pr-\(--gutter\,--spacing\(2\)\) {
    &:last-child {
      padding-right: var(--gutter,calc(var(--spacing) * 2));
    }
  }
  .even\:bg-zinc-950\/\[2\.5\%\] {
    &:nth-child(even) {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
      }
    }
  }
  .hover\:bg-black\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-zinc-950\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-zinc-950\/\[2\.5\%\] {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
        }
      }
    }
  }
  .hover\:bg-gradient-to-br {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:from-sky-100 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-sky-100);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-zinc-50 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-zinc-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-white {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-white);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-zinc-50 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-zinc-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:font-extrabold {
    &:hover {
      @media (hover: hover) {
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:decoration-black\/25 {
    &:hover {
      @media (hover: hover) {
        text-decoration-color: color-mix(in srgb, #000 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          text-decoration-color: color-mix(in oklab, var(--color-black) 25%, transparent);
        }
      }
    }
  }
  .focus\:z-10 {
    &:focus {
      z-index: 10;
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-0 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus-visible\:outline {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:outline-offset-2 {
    &:focus-visible {
      outline-offset: 2px;
    }
  }
  .focus-visible\:outline-indigo-600 {
    &:focus-visible {
      outline-color: var(--color-indigo-600);
    }
  }
  .disabled\:border-zinc-950\/20 {
    &:disabled {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .has-data-disabled\:opacity-50 {
    &:has(*[data-disabled]) {
      opacity: 50%;
    }
  }
  .has-data-disabled\:before\:bg-zinc-950\/5 {
    &:has(*[data-disabled]) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
        }
      }
    }
  }
  .has-data-disabled\:before\:shadow-none {
    &:has(*[data-disabled]) {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .has-data-focus\:after\:ring-2 {
    &:has(*[data-focus]) {
      &::after {
        content: var(--tw-content);
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .has-data-focus\:after\:ring-blue-500 {
    &:has(*[data-focus]) {
      &::after {
        content: var(--tw-content);
        --tw-ring-color: var(--color-blue-500);
      }
    }
  }
  .has-data-invalid\:before\:shadow-red-500\/10 {
    &:has(*[data-invalid]) {
      &::before {
        content: var(--tw-content);
        --tw-shadow-color: color-mix(in srgb, color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent) var(--tw-shadow-alpha), transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-red-500) 10%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .has-data-\[slot\=description\]\:space-y-6 {
    &:has(*[data-slot="description"]) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:outline-2 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:-outline-offset-2 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-offset: calc(2px * -1);
    }
  }
  .has-\[\[data-row-link\]\[data-focus\]\]\:outline-blue-500 {
    &:has(*:is([data-row-link][data-focus])) {
      outline-color: var(--color-blue-500);
    }
  }
  .data-active\:bg-zinc-950\/5 {
    &[data-active] {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .data-active\:bg-zinc-950\/\[2\.5\%\] {
    &[data-active] {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
      }
    }
  }
  .data-active\:\[--btn-border\:var\(--color-zinc-950\)\]\/15 {
    &[data-active] {
      --btn-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
      }
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-blue-300\)\] {
    &[data-active] {
      --btn-icon: var(--color-blue-300);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-fuchsia-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-fuchsia-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-indigo-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-indigo-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-lime-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-lime-700);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-orange-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-orange-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-pink-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-pink-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-purple-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-purple-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-red-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-red-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-rose-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-rose-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-violet-200\)\] {
    &[data-active] {
      --btn-icon: var(--color-violet-200);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-white\)\]\/80 {
    &[data-active] {
      --btn-icon: color-mix(in srgb, #fff 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-icon: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-yellow-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-yellow-700);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-zinc-300\)\] {
    &[data-active] {
      --btn-icon: var(--color-zinc-300);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-zinc-500\)\] {
    &[data-active] {
      --btn-icon: var(--color-zinc-500);
    }
  }
  .data-active\:\[--btn-icon\:var\(--color-zinc-700\)\] {
    &[data-active] {
      --btn-icon: var(--color-zinc-700);
    }
  }
  .data-active\:after\:bg-\(--btn-hover-overlay\) {
    &[data-active] {
      &::after {
        content: var(--tw-content);
        background-color: var(--btn-hover-overlay);
      }
    }
  }
  .data-changing\:duration-200 {
    &[data-changing] {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .data-checked\:bg-\(--switch-bg\) {
    &[data-checked] {
      background-color: var(--switch-bg);
    }
  }
  .data-checked\:ring-\(--switch-bg-ring\) {
    &[data-checked] {
      --tw-ring-color: var(--switch-bg-ring);
    }
  }
  .data-closed\:-translate-x-full {
    &[data-closed] {
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:translate-y-12 {
    &[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 12);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-closed\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .data-disabled\:border-zinc-950\/20 {
    &[data-disabled] {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .data-disabled\:bg-zinc-200 {
    &[data-disabled] {
      background-color: var(--color-zinc-200);
    }
  }
  .data-disabled\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .data-disabled\:opacity-100 {
    &[data-disabled] {
      opacity: 100%;
    }
  }
  .data-disabled\:before\:bg-zinc-950\/5 {
    &[data-disabled] {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
        }
      }
    }
  }
  .data-disabled\:before\:shadow-none {
    &[data-disabled] {
      &::before {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-disabled\:after\:shadow-none {
    &[data-disabled] {
      &::after {
        content: var(--tw-content);
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-disabled\:data-checked\:bg-zinc-200 {
    &[data-disabled] {
      &[data-checked] {
        background-color: var(--color-zinc-200);
      }
    }
  }
  .data-disabled\:data-checked\:ring-black\/5 {
    &[data-disabled] {
      &[data-checked] {
        --tw-ring-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .data-enter\:duration-300 {
    &[data-enter] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .data-enter\:ease-out {
    &[data-enter] {
      --tw-ease: var(--ease-out);
      transition-timing-function: var(--ease-out);
    }
  }
  .data-closed\:data-enter\:scale-95 {
    &[data-closed] {
      &[data-enter] {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .data-focus\:bg-blue-500 {
    &[data-focus] {
      background-color: var(--color-blue-500);
    }
  }
  .data-focus\:text-white {
    &[data-focus] {
      color: var(--color-white);
    }
  }
  .data-focus\:outline {
    &[data-focus] {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .data-focus\:outline-2 {
    &[data-focus] {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .data-focus\:outline-offset-2 {
    &[data-focus] {
      outline-offset: 2px;
    }
  }
  .data-focus\:outline-blue-500 {
    &[data-focus] {
      outline-color: var(--color-blue-500);
    }
  }
  .data-focus\:after\:ring-2 {
    &[data-focus] {
      &::after {
        content: var(--tw-content);
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .data-focus\:after\:ring-blue-500 {
    &[data-focus] {
      &::after {
        content: var(--tw-content);
        --tw-ring-color: var(--color-blue-500);
      }
    }
  }
  .data-hover\:border-zinc-950\/20 {
    &[data-hover] {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
      }
    }
  }
  .data-hover\:bg-zinc-950\/5 {
    &[data-hover] {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .data-hover\:bg-zinc-950\/\[2\.5\%\] {
    &[data-hover] {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 2.5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 2.5%, transparent);
      }
    }
  }
  .data-hover\:decoration-zinc-950 {
    &[data-hover] {
      text-decoration-color: var(--color-zinc-950);
    }
  }
  .data-hover\:ring-black\/15 {
    &[data-hover] {
      --tw-ring-color: color-mix(in srgb, #000 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-black) 15%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-border\:var\(--color-zinc-950\)\]\/15 {
    &[data-hover] {
      --btn-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-blue-300\)\] {
    &[data-hover] {
      --btn-icon: var(--color-blue-300);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-fuchsia-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-fuchsia-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-indigo-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-indigo-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-lime-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-lime-700);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-orange-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-orange-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-pink-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-pink-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-purple-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-purple-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-red-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-red-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-rose-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-rose-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-violet-200\)\] {
    &[data-hover] {
      --btn-icon: var(--color-violet-200);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-white\)\]\/80 {
    &[data-hover] {
      --btn-icon: color-mix(in srgb, #fff 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-icon: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-yellow-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-yellow-700);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-zinc-300\)\] {
    &[data-hover] {
      --btn-icon: var(--color-zinc-300);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-zinc-500\)\] {
    &[data-hover] {
      --btn-icon: var(--color-zinc-500);
    }
  }
  .data-hover\:\[--btn-icon\:var\(--color-zinc-700\)\] {
    &[data-hover] {
      --btn-icon: var(--color-zinc-700);
    }
  }
  .data-hover\:after\:bg-\(--btn-hover-overlay\) {
    &[data-hover] {
      &::after {
        content: var(--tw-content);
        background-color: var(--btn-hover-overlay);
      }
    }
  }
  .data-hover\:data-checked\:ring-\(--switch-bg-ring\) {
    &[data-hover] {
      &[data-checked] {
        --tw-ring-color: var(--switch-bg-ring);
      }
    }
  }
  .data-invalid\:border-red-500 {
    &[data-invalid] {
      border-color: var(--color-red-500);
    }
  }
  .data-invalid\:data-hover\:border-red-500 {
    &[data-invalid] {
      &[data-hover] {
        border-color: var(--color-red-500);
      }
    }
  }
  .data-leave\:duration-100 {
    &[data-leave] {
      --tw-duration: 100ms;
      transition-duration: 100ms;
    }
  }
  .data-leave\:duration-200 {
    &[data-leave] {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
  }
  .data-leave\:ease-in {
    &[data-leave] {
      --tw-ease: var(--ease-in);
      transition-timing-function: var(--ease-in);
    }
  }
  .data-closed\:data-leave\:opacity-0 {
    &[data-closed] {
      &[data-leave] {
        opacity: 0%;
      }
    }
  }
  .data-transition\:pointer-events-none {
    &[data-transition] {
      pointer-events: none;
    }
  }
  .data-\[anchor\~\=end\]\:\[--anchor-offset\:6px\] {
    &[data-anchor~="end"] {
      --anchor-offset: 6px;
    }
  }
  .data-\[anchor\~\=start\]\:\[--anchor-offset\:-6px\] {
    &[data-anchor~="start"] {
      --anchor-offset: -6px;
    }
  }
  .\*\:data-\[slot\=avatar\]\:-m-0\.5 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:-mx-0\.5 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin-inline: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:mr-2\.5 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin-right: calc(var(--spacing) * 2.5);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:-ml-1 {
    :is(& > *) {
      &[data-slot="avatar"] {
        margin-left: calc(var(--spacing) * -1);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:size-6 {
    :is(& > *) {
      &[data-slot="avatar"] {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:size-7 {
    :is(& > *) {
      &[data-slot="avatar"] {
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:\[--avatar-radius\:var\(--radius-md\)\] {
    :is(& > *) {
      &[data-slot="avatar"] {
        --avatar-radius: var(--radius-md);
      }
    }
  }
  .\*\:data-\[slot\=avatar\]\:\[--ring-opacity\:10\%\] {
    :is(& > *) {
      &[data-slot="avatar"] {
        --ring-opacity: 10%;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:row-start-1 {
    :is(& > *) {
      &[data-slot="control"] {
        grid-row-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:self-center {
    :is(& > *) {
      &[data-slot="control"] {
        align-self: center;
      }
    }
  }
  .\*\:data-\[slot\=control\]\:justify-self-center {
    :is(& > *) {
      &[data-slot="control"] {
        justify-self: center;
      }
    }
  }
  .\*\:data-\[slot\=description\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=description\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=description\]\:row-start-2 {
    :is(& > *) {
      &[data-slot="description"] {
        grid-row-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:pointer-events-none {
    :is(& > *) {
      &[data-slot="icon"] {
        pointer-events: none;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:absolute {
    :is(& > *) {
      &[data-slot="icon"] {
        position: absolute;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:top-3 {
    :is(& > *) {
      &[data-slot="icon"] {
        top: calc(var(--spacing) * 3);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:z-10 {
    :is(& > *) {
      &[data-slot="icon"] {
        z-index: 10;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="icon"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:row-start-1 {
    :is(& > *) {
      &[data-slot="icon"] {
        grid-row-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:-mx-0\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-inline: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:my-0\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-block: calc(var(--spacing) * 0.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:mr-2\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-right: calc(var(--spacing) * 2.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:-ml-0\.5 {
    :is(& > *) {
      &[data-slot="icon"] {
        margin-left: calc(var(--spacing) * -0.5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:size-5 {
    :is(& > *) {
      &[data-slot="icon"] {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:size-6 {
    :is(& > *) {
      &[data-slot="icon"] {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:shrink-0 {
    :is(& > *) {
      &[data-slot="icon"] {
        flex-shrink: 0;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:self-center {
    :is(& > *) {
      &[data-slot="icon"] {
        align-self: center;
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:fill-zinc-500 {
    :is(& > *) {
      &[data-slot="icon"] {
        fill: var(--color-zinc-500);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:text-\(--btn-icon\) {
    :is(& > *) {
      &[data-slot="icon"] {
        color: var(--btn-icon);
      }
    }
  }
  .\*\:data-\[slot\=icon\]\:text-zinc-500 {
    :is(& > *) {
      &[data-slot="icon"] {
        color: var(--color-zinc-500);
      }
    }
  }
  .group-data-focus\/option\:\*\:data-\[slot\=icon\]\:text-white {
    &:is(:where(.group\/option)[data-focus] *) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-white);
        }
      }
    }
  }
  .\*\:last\:data-\[slot\=icon\]\:ml-auto {
    :is(& > *) {
      &:last-child {
        &[data-slot="icon"] {
          margin-left: auto;
        }
      }
    }
  }
  .\*\:last\:data-\[slot\=icon\]\:size-5 {
    :is(& > *) {
      &:last-child {
        &[data-slot="icon"] {
          width: calc(var(--spacing) * 5);
          height: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .\*\:not-nth-2\:last\:data-\[slot\=icon\]\:ml-auto {
    :is(& > *) {
      &:not(*:nth-child(2)) {
        &:last-child {
          &[data-slot="icon"] {
            margin-left: auto;
          }
        }
      }
    }
  }
  .\*\:not-nth-2\:last\:data-\[slot\=icon\]\:size-5 {
    :is(& > *) {
      &:not(*:nth-child(2)) {
        &:last-child {
          &[data-slot="icon"] {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
          }
        }
      }
    }
  }
  .data-active\:\*\:data-\[slot\=icon\]\:fill-zinc-950 {
    &[data-active] {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-zinc-950);
        }
      }
    }
  }
  .data-current\:\*\:data-\[slot\=icon\]\:fill-zinc-950 {
    &[data-current] {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-zinc-950);
        }
      }
    }
  }
  .data-focus\:\*\:data-\[slot\=icon\]\:text-white {
    &[data-focus] {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-white);
        }
      }
    }
  }
  .data-hover\:\*\:data-\[slot\=icon\]\:fill-zinc-950 {
    &[data-hover] {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-zinc-950);
        }
      }
    }
  }
  .\*\:data-\[slot\=label\]\:col-start-1 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-column-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:col-start-2 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-column-start: 2;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:row-start-1 {
    :is(& > *) {
      &[data-slot="label"] {
        grid-row-start: 1;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:justify-self-start {
    :is(& > *) {
      &[data-slot="label"] {
        justify-self: flex-start;
      }
    }
  }
  .\*\:data-\[slot\=label\]\:font-medium {
    :is(& > *) {
      &[data-slot="label"] {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
      }
    }
  }
  .\*\*\:data-\[slot\=label\]\:font-normal {
    :is(& *) {
      &[data-slot="label"] {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
      }
    }
  }
  .has-data-\[slot\=description\]\:\*\*\:data-\[slot\=label\]\:font-medium {
    &:has(*[data-slot="description"]) {
      :is(& *) {
        &[data-slot="label"] {
          --tw-font-weight: var(--font-weight-medium);
          font-weight: var(--font-weight-medium);
        }
      }
    }
  }
  .\*\:data-\[slot\=text\]\:mt-1 {
    :is(& > *) {
      &[data-slot="text"] {
        margin-top: calc(var(--spacing) * 1);
      }
    }
  }
  .supports-\[grid-template-columns\:subgrid\]\:grid {
    @supports (grid-template-columns:subgrid) {
      display: grid;
    }
  }
  .supports-\[grid-template-columns\:subgrid\]\:grid-cols-\[auto_1fr_1\.5rem_0\.5rem_auto\] {
    @supports (grid-template-columns:subgrid) {
      grid-template-columns: auto 1fr 1.5rem 0.5rem auto;
    }
  }
  .supports-\[grid-template-columns\:subgrid\]\:grid-cols-subgrid {
    @supports (grid-template-columns:subgrid) {
      grid-template-columns: subgrid;
    }
  }
  .max-lg\:hidden {
    @media (width < 64rem) {
      display: none;
    }
  }
  .max-lg\:flex-col {
    @media (width < 64rem) {
      flex-direction: column;
    }
  }
  .max-md\:hidden {
    @media (width < 48rem) {
      display: none;
    }
  }
  .sm\:-inset-x-6 {
    @media (width >= 40rem) {
      inset-inline: calc(var(--spacing) * -6);
    }
  }
  .sm\:mx-3 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 3);
    }
  }
  .sm\:mt-4 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 4);
    }
  }
  .sm\:mb-auto {
    @media (width >= 40rem) {
      margin-bottom: auto;
    }
  }
  .sm\:ml-2 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:size-3\.5 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:size-4 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .sm\:size-\[1\.0625rem\] {
    @media (width >= 40rem) {
      width: 1.0625rem;
      height: 1.0625rem;
    }
  }
  .sm\:h-3\.5 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:h-5 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .sm\:min-h-9 {
    @media (width >= 40rem) {
      min-height: calc(var(--spacing) * 9);
    }
  }
  .sm\:w-3\.5 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 3.5);
    }
  }
  .sm\:w-8 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 8);
    }
  }
  .sm\:max-w-2xl {
    @media (width >= 40rem) {
      max-width: var(--container-2xl);
    }
  }
  .sm\:max-w-3xl {
    @media (width >= 40rem) {
      max-width: var(--container-3xl);
    }
  }
  .sm\:max-w-4xl {
    @media (width >= 40rem) {
      max-width: var(--container-4xl);
    }
  }
  .sm\:max-w-5xl {
    @media (width >= 40rem) {
      max-width: var(--container-5xl);
    }
  }
  .sm\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\:max-w-md {
    @media (width >= 40rem) {
      max-width: var(--container-md);
    }
  }
  .sm\:max-w-sm {
    @media (width >= 40rem) {
      max-width: var(--container-sm);
    }
  }
  .sm\:max-w-xl {
    @media (width >= 40rem) {
      max-width: var(--container-xl);
    }
  }
  .sm\:max-w-xs {
    @media (width >= 40rem) {
      max-width: var(--container-xs);
    }
  }
  .sm\:grid-cols-\[--spacing\(4\)_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: calc(var(--spacing) * 4) 1fr;
    }
  }
  .sm\:grid-cols-\[1fr_auto\] {
    @media (width >= 40rem) {
      grid-template-columns: 1fr auto;
    }
  }
  .sm\:grid-cols-\[1rem_1fr\] {
    @media (width >= 40rem) {
      grid-template-columns: 1rem 1fr;
    }
  }
  .sm\:grid-cols-\[min\(50\%\,--spacing\(80\)\)_auto\] {
    @media (width >= 40rem) {
      grid-template-columns: min(50%, calc(var(--spacing) * 80)) auto;
    }
  }
  .sm\:grid-rows-\[1fr_auto_3fr\] {
    @media (width >= 40rem) {
      grid-template-rows: 1fr auto 3fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-nowrap {
    @media (width >= 40rem) {
      flex-wrap: nowrap;
    }
  }
  .sm\:rounded-2xl {
    @media (width >= 40rem) {
      border-radius: var(--radius-2xl);
    }
  }
  .sm\:border-t {
    @media (width >= 40rem) {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  }
  .sm\:border-zinc-950\/5 {
    @media (width >= 40rem) {
      border-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .sm\:p-4 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .sm\:p-6 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-\(--gutter\) {
    @media (width >= 40rem) {
      padding-inline: var(--gutter);
    }
  }
  .sm\:px-3 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-\[calc\(--spacing\(3\)-1px\)\] {
    @media (width >= 40rem) {
      padding-inline: calc(calc(var(--spacing) * 3) - 1px);
    }
  }
  .sm\:py-1\.5 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:py-2 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .sm\:py-3 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .sm\:py-8 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:py-24 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .sm\:py-\[calc\(--spacing\(1\.5\)-1px\)\] {
    @media (width >= 40rem) {
      padding-block: calc(calc(var(--spacing) * 1.5) - 1px);
    }
  }
  .sm\:pt-0 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:pr-3 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 3);
    }
  }
  .sm\:pr-\[calc\(--spacing\(9\)-1px\)\] {
    @media (width >= 40rem) {
      padding-right: calc(calc(var(--spacing) * 9) - 1px);
    }
  }
  .sm\:pl-1\.5 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:pl-\[calc\(--spacing\(3\)-1px\)\] {
    @media (width >= 40rem) {
      padding-left: calc(calc(var(--spacing) * 3) - 1px);
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:text-base\/6 {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-sm\/5 {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 5);
    }
  }
  .sm\:text-sm\/6 {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-xl\/8 {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: calc(var(--spacing) * 8);
    }
  }
  .sm\:text-xs\/5 {
    @media (width >= 40rem) {
      font-size: var(--text-xs);
      line-height: calc(var(--spacing) * 5);
    }
  }
  .sm\:text-\[0\.8125rem\] {
    @media (width >= 40rem) {
      font-size: 0.8125rem;
    }
  }
  .sm\:text-wrap {
    @media (width >= 40rem) {
      text-wrap: wrap;
    }
  }
  .sm\:\[--anchor-offset\:-1\.375rem\] {
    @media (width >= 40rem) {
      --anchor-offset: -1.375rem;
    }
  }
  .sm\:\*\:w-auto {
    @media (width >= 40rem) {
      :is(& > *) {
        width: auto;
      }
    }
  }
  .sm\:group-data-checked\:translate-x-3 {
    @media (width >= 40rem) {
      &:is(:where(.group)[data-checked] *) {
        --tw-translate-x: calc(var(--spacing) * 3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .sm\:first\:ml-0 {
    @media (width >= 40rem) {
      &:first-child {
        margin-left: calc(var(--spacing) * 0);
      }
    }
  }
  .sm\:first\:pl-1 {
    @media (width >= 40rem) {
      &:first-child {
        padding-left: calc(var(--spacing) * 1);
      }
    }
  }
  .sm\:last\:pr-1 {
    @media (width >= 40rem) {
      &:last-child {
        padding-right: calc(var(--spacing) * 1);
      }
    }
  }
  .sm\:focus-within\:after\:ring-2 {
    @media (width >= 40rem) {
      &:focus-within {
        &::after {
          content: var(--tw-content);
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .sm\:focus-within\:after\:ring-blue-500 {
    @media (width >= 40rem) {
      &:focus-within {
        &::after {
          content: var(--tw-content);
          --tw-ring-color: var(--color-blue-500);
        }
      }
    }
  }
  .sm\:data-closed\:translate-y-0 {
    @media (width >= 40rem) {
      &[data-closed] {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .sm\:data-closed\:data-enter\:scale-95 {
    @media (width >= 40rem) {
      &[data-closed] {
        &[data-enter] {
          --tw-scale-x: 95%;
          --tw-scale-y: 95%;
          --tw-scale-z: 95%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .sm\:data-\[anchor\~\=end\]\:\[--anchor-offset\:4px\] {
    @media (width >= 40rem) {
      &[data-anchor~="end"] {
        --anchor-offset: 4px;
      }
    }
  }
  .sm\:data-\[anchor\~\=start\]\:\[--anchor-offset\:-4px\] {
    @media (width >= 40rem) {
      &[data-anchor~="start"] {
        --anchor-offset: -4px;
      }
    }
  }
  .sm\:\*\:data-\[slot\=avatar\]\:mr-2 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="avatar"] {
          margin-right: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=avatar\]\:size-5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="avatar"] {
          width: calc(var(--spacing) * 5);
          height: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=avatar\]\:size-6 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="avatar"] {
          width: calc(var(--spacing) * 6);
          height: calc(var(--spacing) * 6);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:top-2\.5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          top: calc(var(--spacing) * 2.5);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:my-1 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          margin-block: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:mr-2 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          margin-right: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:size-4 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          width: calc(var(--spacing) * 4);
          height: calc(var(--spacing) * 4);
        }
      }
    }
  }
  .sm\:\*\:data-\[slot\=icon\]\:size-5 {
    @media (width >= 40rem) {
      :is(& > *) {
        &[data-slot="icon"] {
          width: calc(var(--spacing) * 5);
          height: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .sm\:\*\:last\:data-\[slot\=icon\]\:size-4 {
    @media (width >= 40rem) {
      :is(& > *) {
        &:last-child {
          &[data-slot="icon"] {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
          }
        }
      }
    }
  }
  .sm\:\*\:not-nth-2\:last\:data-\[slot\=icon\]\:size-4 {
    @media (width >= 40rem) {
      :is(& > *) {
        &:not(*:nth-child(2)) {
          &:last-child {
            &[data-slot="icon"] {
              width: calc(var(--spacing) * 4);
              height: calc(var(--spacing) * 4);
            }
          }
        }
      }
    }
  }
  .sm\:nth-2\:border-none {
    @media (width >= 40rem) {
      &:nth-child(2) {
        --tw-border-style: none;
        border-style: none;
      }
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:items-baseline {
    @media (width >= 48rem) {
      align-items: baseline;
    }
  }
  .lg\:-mx-4 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * -4);
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:min-w-0 {
    @media (width >= 64rem) {
      min-width: calc(var(--spacing) * 0);
    }
  }
  .lg\:rounded-lg {
    @media (width >= 64rem) {
      border-radius: var(--radius-lg);
    }
  }
  .lg\:bg-white {
    @media (width >= 64rem) {
      background-color: var(--color-white);
    }
  }
  .lg\:bg-zinc-100 {
    @media (width >= 64rem) {
      background-color: var(--color-zinc-100);
    }
  }
  .lg\:p-10 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .lg\:px-2 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:pt-2 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 2);
    }
  }
  .lg\:pr-2 {
    @media (width >= 64rem) {
      padding-right: calc(var(--spacing) * 2);
    }
  }
  .lg\:pl-64 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 64);
    }
  }
  .lg\:shadow-xs {
    @media (width >= 64rem) {
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .lg\:ring-1 {
    @media (width >= 64rem) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .lg\:ring-zinc-950\/5 {
    @media (width >= 64rem) {
      --tw-ring-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/5 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:border-white\/20 {
    @media (prefers-color-scheme: dark) {
      border-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-b-white\/10 {
    @media (prefers-color-scheme: dark) {
      border-bottom-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-l-white\/5 {
    @media (prefers-color-scheme: dark) {
      border-left-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-left-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-\(--btn-bg\) {
    @media (prefers-color-scheme: dark) {
      background-color: var(--btn-bg);
    }
  }
  .dark\:bg-amber-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-amber-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-cyan-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-cyan-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-emerald-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-fuchsia-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-fuchsia-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-green-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-lime-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-lime-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-orange-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-pink-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-pink-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-red-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-rose-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-rose-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-sky-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-teal-500\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
      }
    }
  }
  .dark\:bg-white {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-white);
    }
  }
  .dark\:bg-white\/5 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-yellow-400\/10 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-yellow-400) 10%, transparent);
      }
    }
  }
  .dark\:bg-zinc-500 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-zinc-500);
    }
  }
  .dark\:bg-zinc-800\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-800) 50%, transparent);
      }
    }
  }
  .dark\:bg-zinc-800\/75 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(27.4% 0.006 286.033) 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-800) 75%, transparent);
      }
    }
  }
  .dark\:bg-zinc-900 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-zinc-900);
    }
  }
  .dark\:bg-zinc-950\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(14.1% 0.005 285.823) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-950) 50%, transparent);
      }
    }
  }
  .dark\:stroke-zinc-400 {
    @media (prefers-color-scheme: dark) {
      stroke: var(--color-zinc-400);
    }
  }
  .dark\:text-amber-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-amber-400);
    }
  }
  .dark\:text-blue-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-cyan-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-cyan-300);
    }
  }
  .dark\:text-emerald-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-emerald-400);
    }
  }
  .dark\:text-fuchsia-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-fuchsia-400);
    }
  }
  .dark\:text-green-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-green-400);
    }
  }
  .dark\:text-indigo-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-indigo-400);
    }
  }
  .dark\:text-lime-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-lime-300);
    }
  }
  .dark\:text-orange-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-orange-400);
    }
  }
  .dark\:text-pink-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-pink-400);
    }
  }
  .dark\:text-purple-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-purple-400);
    }
  }
  .dark\:text-red-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-red-400);
    }
  }
  .dark\:text-red-500 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-red-500);
    }
  }
  .dark\:text-rose-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-rose-400);
    }
  }
  .dark\:text-sky-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-sky-300);
    }
  }
  .dark\:text-teal-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-teal-300);
    }
  }
  .dark\:text-violet-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-violet-400);
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .dark\:text-yellow-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-yellow-300);
    }
  }
  .dark\:text-zinc-100 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-zinc-100);
    }
  }
  .dark\:text-zinc-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-zinc-400);
    }
  }
  .dark\:text-zinc-500 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-zinc-500);
    }
  }
  .dark\:text-zinc-950 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-zinc-950);
    }
  }
  .dark\:decoration-white\/30 {
    @media (prefers-color-scheme: dark) {
      text-decoration-color: color-mix(in srgb, #fff 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        text-decoration-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }
  .dark\:decoration-white\/50 {
    @media (prefers-color-scheme: dark) {
      text-decoration-color: color-mix(in srgb, #fff 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        text-decoration-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .dark\:\[color-scheme\:dark\] {
    @media (prefers-color-scheme: dark) {
      color-scheme: dark;
    }
  }
  .dark\:ring-white\/10 {
    @media (prefers-color-scheme: dark) {
      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:ring-white\/15 {
    @media (prefers-color-scheme: dark) {
      --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:outline-white\/\(--ring-opacity\) {
    @media (prefers-color-scheme: dark) {
      outline-color: color-mix(in srgb, #fff var(--ring-opacity), transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) var(--ring-opacity), transparent);
      }
    }
  }
  .dark\:\[--btn-bg\:transparent\] {
    @media (prefers-color-scheme: dark) {
      --btn-bg: transparent;
    }
  }
  .dark\:\[--btn-bg\:var\(--color-zinc-600\)\] {
    @media (prefers-color-scheme: dark) {
      --btn-bg: var(--color-zinc-600);
    }
  }
  .dark\:\[--btn-bg\:var\(--color-zinc-800\)\] {
    @media (prefers-color-scheme: dark) {
      --btn-bg: var(--color-zinc-800);
    }
  }
  .dark\:\[--btn-bg\:white\] {
    @media (prefers-color-scheme: dark) {
      --btn-bg: white;
    }
  }
  .dark\:\[--btn-hover-overlay\:var\(--color-white\)\]\/5 {
    @media (prefers-color-scheme: dark) {
      --btn-hover-overlay: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-hover-overlay: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:\[--btn-hover-overlay\:var\(--color-zinc-950\)\]\/5 {
    @media (prefers-color-scheme: dark) {
      --btn-hover-overlay: color-mix(in srgb, oklch(14.1% 0.005 285.823) 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-hover-overlay: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
      }
    }
  }
  .dark\:\[--btn-icon\:var\(--color-zinc-500\)\] {
    @media (prefers-color-scheme: dark) {
      --btn-icon: var(--color-zinc-500);
    }
  }
  .dark\:\[--checkbox-check\:var\(--color-zinc-900\)\] {
    @media (prefers-color-scheme: dark) {
      --checkbox-check: var(--color-zinc-900);
    }
  }
  .dark\:\[--checkbox-checked-bg\:var\(--color-white\)\] {
    @media (prefers-color-scheme: dark) {
      --checkbox-checked-bg: var(--color-white);
    }
  }
  .dark\:\[--checkbox-checked-bg\:var\(--color-zinc-600\)\] {
    @media (prefers-color-scheme: dark) {
      --checkbox-checked-bg: var(--color-zinc-600);
    }
  }
  .dark\:\[--checkbox-checked-border\:var\(--color-zinc-950\)\]\/15 {
    @media (prefers-color-scheme: dark) {
      --checkbox-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --checkbox-checked-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
      }
    }
  }
  .dark\:\[--radio-checked-bg\:var\(--color-white\)\] {
    @media (prefers-color-scheme: dark) {
      --radio-checked-bg: var(--color-white);
    }
  }
  .dark\:\[--radio-checked-bg\:var\(--color-zinc-600\)\] {
    @media (prefers-color-scheme: dark) {
      --radio-checked-bg: var(--color-zinc-600);
    }
  }
  .dark\:\[--radio-checked-border\:var\(--color-zinc-950\)\]\/15 {
    @media (prefers-color-scheme: dark) {
      --radio-checked-border: color-mix(in srgb, oklch(14.1% 0.005 285.823) 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --radio-checked-border: color-mix(in oklab, var(--color-zinc-950) 15%, transparent);
      }
    }
  }
  .dark\:\[--radio-checked-indicator\:var\(--color-zinc-900\)\] {
    @media (prefers-color-scheme: dark) {
      --radio-checked-indicator: var(--color-zinc-900);
    }
  }
  .dark\:\[--switch-bg-ring\:transparent\] {
    @media (prefers-color-scheme: dark) {
      --switch-bg-ring: transparent;
    }
  }
  .dark\:\[--switch-bg-ring\:var\(--color-white\)\]\/15 {
    @media (prefers-color-scheme: dark) {
      --switch-bg-ring: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-bg-ring: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:\[--switch-bg\:var\(--color-white\)\] {
    @media (prefers-color-scheme: dark) {
      --switch-bg: var(--color-white);
    }
  }
  .dark\:\[--switch-bg\:var\(--color-white\)\]\/25 {
    @media (prefers-color-scheme: dark) {
      --switch-bg: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-bg: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
  }
  .dark\:\[--switch-ring\:transparent\] {
    @media (prefers-color-scheme: dark) {
      --switch-ring: transparent;
    }
  }
  .dark\:\[--switch-ring\:var\(--color-zinc-700\)\]\/90 {
    @media (prefers-color-scheme: dark) {
      --switch-ring: color-mix(in srgb, oklch(37% 0.013 285.805) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --switch-ring: color-mix(in oklab, var(--color-zinc-700) 90%, transparent);
      }
    }
  }
  .dark\:\[--switch\:var\(--color-zinc-900\)\] {
    @media (prefers-color-scheme: dark) {
      --switch: var(--color-zinc-900);
    }
  }
  .dark\:ring-inset {
    @media (prefers-color-scheme: dark) {
      --tw-ring-inset: inset;
    }
  }
  .dark\:\*\:bg-zinc-800 {
    @media (prefers-color-scheme: dark) {
      :is(& > *) {
        background-color: var(--color-zinc-800);
      }
    }
  }
  .dark\:\*\:text-white {
    @media (prefers-color-scheme: dark) {
      :is(& > *) {
        color: var(--color-white);
      }
    }
  }
  .dark\:group-data-active\:border-white\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-active] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-checked\:border-white\/5 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-checked] *) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:group-data-checked\:bg-\(--checkbox-checked-bg\) {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-checked] *) {
        background-color: var(--checkbox-checked-bg);
      }
    }
  }
  .dark\:group-data-checked\:bg-\(--radio-checked-bg\) {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-checked] *) {
        background-color: var(--radio-checked-bg);
      }
    }
  }
  .dark\:group-data-disabled\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        border-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:border-white\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:\[--checkbox-check\:var\(--color-white\)\]\/50 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        --checkbox-check: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --checkbox-check: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .dark\:group-data-disabled\:\[--radio-checked-indicator\:var\(--color-white\)\]\/50 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        --radio-checked-indicator: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --radio-checked-indicator: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:border-white\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:border-white\/30 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        border-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-amber-400\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-amber-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-blue-500\/25 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-500) 25%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-cyan-400\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-cyan-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-emerald-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-fuchsia-400\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(74% 0.238 322.16) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-fuchsia-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-green-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-indigo-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-lime-400\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(84.1% 0.238 128.85) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-lime-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-orange-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-pink-400\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-pink-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-purple-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-red-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-rose-400\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-rose-400) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-sky-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-teal-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(70.4% 0.14 182.503) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-violet-500\/20 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:bg-yellow-400\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        background-color: color-mix(in srgb, oklch(85.2% 0.199 91.936) 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-400) 15%, transparent);
        }
      }
    }
  }
  .dark\:group-data-hover\:\[--radio-indicator\:var\(--color-zinc-700\)\] {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        --radio-indicator: var(--color-zinc-700);
      }
    }
  }
  .dark\:group-data-hover\:group-data-checked\:border-white\/5 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        &:is(:where(.group)[data-checked] *) {
          border-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-data-hover\:group-data-checked\:\[--radio-indicator\:var\(--radio-checked-indicator\)\] {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-hover] *) {
        &:is(:where(.group)[data-checked] *) {
          --radio-indicator: var(--radio-checked-indicator);
        }
      }
    }
  }
  .dark\:group-data-invalid\:border-red-600 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-invalid] *) {
        border-color: var(--color-red-600);
      }
    }
  }
  .dark\:before\:hidden {
    @media (prefers-color-scheme: dark) {
      &::before {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .dark\:before\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:after\:-inset-px {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        inset: -1px;
      }
    }
  }
  .dark\:after\:hidden {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .dark\:after\:rounded-\[0\.3125rem\] {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        border-radius: 0.3125rem;
      }
    }
  }
  .dark\:after\:rounded-full {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        border-radius: calc(infinity * 1px);
      }
    }
  }
  .dark\:after\:rounded-lg {
    @media (prefers-color-scheme: dark) {
      &::after {
        content: var(--tw-content);
        border-radius: var(--radius-lg);
      }
    }
  }
  .dark\:group-data-checked\:after\:block {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-checked] *) {
        &::after {
          content: var(--tw-content);
          display: block;
        }
      }
    }
  }
  .dark\:group-data-checked\:group-data-disabled\:after\:hidden {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-checked] *) {
        &:is(:where(.group)[data-disabled] *) {
          &::after {
            content: var(--tw-content);
            display: none;
          }
        }
      }
    }
  }
  .dark\:even\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &:nth-child(even) {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:focus-within\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &:focus-within {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:hover\:bg-white\/5 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 2.5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-white {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .hover\:dark\:text-white {
    &:hover {
      @media (hover: hover) {
        @media (prefers-color-scheme: dark) {
          color: var(--color-white);
        }
      }
    }
  }
  .hover\:dark\:decoration-white\/50 {
    &:hover {
      @media (hover: hover) {
        @media (prefers-color-scheme: dark) {
          text-decoration-color: color-mix(in srgb, #fff 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            text-decoration-color: color-mix(in oklab, var(--color-white) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\:disabled\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &:disabled {
        border-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:disabled\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &:disabled {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:data-active\:bg-white\/5 {
    @media (prefers-color-scheme: dark) {
      &[data-active] {
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:data-active\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &[data-active] {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:data-active\:\[--btn-icon\:var\(--color-zinc-400\)\] {
    @media (prefers-color-scheme: dark) {
      &[data-active] {
        --btn-icon: var(--color-zinc-400);
      }
    }
  }
  .dark\:data-checked\:bg-\(--switch-bg\) {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        background-color: var(--switch-bg);
      }
    }
  }
  .dark\:data-checked\:ring-\(--switch-bg-ring\) {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        --tw-ring-color: var(--switch-bg-ring);
      }
    }
  }
  .dark\:data-disabled\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        border-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:bg-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        background-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:bg-white\/\[2\.5\%\] {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        background-color: color-mix(in srgb, #fff 2.5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2.5%, transparent);
        }
      }
    }
  }
  .dark\:data-disabled\:data-checked\:bg-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        &[data-checked] {
          background-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-disabled\:data-checked\:ring-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        &[data-checked] {
          --tw-ring-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-hover\:border-white\/20 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        border-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:bg-white\/5 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:bg-white\/10 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:decoration-white {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        text-decoration-color: var(--color-white);
      }
    }
  }
  .dark\:data-hover\:ring-white\/25 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        --tw-ring-color: color-mix(in srgb, #fff 25%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-white) 25%, transparent);
        }
      }
    }
  }
  .dark\:data-hover\:\[--btn-icon\:var\(--color-zinc-400\)\] {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        --btn-icon: var(--color-zinc-400);
      }
    }
  }
  .dark\:group-data-disabled\:data-hover\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group)[data-disabled] *) {
        &[data-hover] {
          border-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-hover\:group-data-invalid\:border-red-600 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        &:is(:where(.group)[data-invalid] *) {
          border-color: var(--color-red-600);
        }
      }
    }
  }
  .dark\:data-hover\:disabled\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        &:disabled {
          border-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-hover\:data-checked\:ring-\(--switch-bg-ring\) {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        &[data-checked] {
          --tw-ring-color: var(--switch-bg-ring);
        }
      }
    }
  }
  .dark\:data-hover\:data-disabled\:border-white\/15 {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        &[data-disabled] {
          border-color: color-mix(in srgb, #fff 15%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
  }
  .dark\:data-invalid\:border-red-500 {
    @media (prefers-color-scheme: dark) {
      &[data-invalid] {
        border-color: var(--color-red-500);
      }
    }
  }
  .dark\:data-invalid\:border-red-600 {
    @media (prefers-color-scheme: dark) {
      &[data-invalid] {
        border-color: var(--color-red-600);
      }
    }
  }
  .dark\:data-invalid\:data-hover\:border-red-500 {
    @media (prefers-color-scheme: dark) {
      &[data-invalid] {
        &[data-hover] {
          border-color: var(--color-red-500);
        }
      }
    }
  }
  .dark\:data-invalid\:data-hover\:border-red-600 {
    @media (prefers-color-scheme: dark) {
      &[data-invalid] {
        &[data-hover] {
          border-color: var(--color-red-600);
        }
      }
    }
  }
  .dark\:\*\:data-\[slot\=icon\]\:fill-zinc-400 {
    @media (prefers-color-scheme: dark) {
      :is(& > *) {
        &[data-slot="icon"] {
          fill: var(--color-zinc-400);
        }
      }
    }
  }
  .dark\:\*\:data-\[slot\=icon\]\:text-zinc-400 {
    @media (prefers-color-scheme: dark) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: var(--color-zinc-400);
        }
      }
    }
  }
  .dark\:data-active\:\*\:data-\[slot\=icon\]\:fill-white {
    @media (prefers-color-scheme: dark) {
      &[data-active] {
        :is(& > *) {
          &[data-slot="icon"] {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:data-current\:\*\:data-\[slot\=icon\]\:fill-white {
    @media (prefers-color-scheme: dark) {
      &[data-current] {
        :is(& > *) {
          &[data-slot="icon"] {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:data-focus\:\*\:data-\[slot\=icon\]\:text-white {
    @media (prefers-color-scheme: dark) {
      &[data-focus] {
        :is(& > *) {
          &[data-slot="icon"] {
            color: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:data-hover\:\*\:data-\[slot\=icon\]\:fill-white {
    @media (prefers-color-scheme: dark) {
      &[data-hover] {
        :is(& > *) {
          &[data-slot="icon"] {
            fill: var(--color-white);
          }
        }
      }
    }
  }
  .dark\:sm\:border-white\/5 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 40rem) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .sm\:dark\:border-white\/5 {
    @media (width >= 40rem) {
      @media (prefers-color-scheme: dark) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:lg\:bg-zinc-900 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 64rem) {
        background-color: var(--color-zinc-900);
      }
    }
  }
  .dark\:lg\:bg-zinc-950 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 64rem) {
        background-color: var(--color-zinc-950);
      }
    }
  }
  .dark\:lg\:ring-white\/10 {
    @media (prefers-color-scheme: dark) {
      @media (width >= 64rem) {
        --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .forced-colors\:border-\[Canvas\] {
    @media (forced-colors: active) {
      border-color: Canvas;
    }
  }
  .forced-colors\:bg-\[CanvasText\] {
    @media (forced-colors: active) {
      background-color: CanvasText;
    }
  }
  .forced-colors\:stroke-\[CanvasText\] {
    @media (forced-colors: active) {
      stroke: CanvasText;
    }
  }
  .forced-colors\:text-\[CanvasText\] {
    @media (forced-colors: active) {
      color: CanvasText;
    }
  }
  .forced-colors\:outline {
    @media (forced-colors: active) {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .forced-colors\:\[--btn-icon\:ButtonText\] {
    @media (forced-colors: active) {
      --btn-icon: ButtonText;
    }
  }
  .forced-colors\:\[--checkbox-check\:HighlightText\] {
    @media (forced-colors: active) {
      --checkbox-check: HighlightText;
    }
  }
  .forced-colors\:\[--checkbox-checked-bg\:Highlight\] {
    @media (forced-colors: active) {
      --checkbox-checked-bg: Highlight;
    }
  }
  .forced-colors\:\[--switch-bg\:Highlight\] {
    @media (forced-colors: active) {
      --switch-bg: Highlight;
    }
  }
  .forced-colors\:group-data-checked\:border-\[Highlight\] {
    @media (forced-colors: active) {
      &:is(:where(.group)[data-checked] *) {
        border-color: Highlight;
      }
    }
  }
  .forced-colors\:group-data-disabled\:\[--checkbox-check\:Highlight\] {
    @media (forced-colors: active) {
      &:is(:where(.group)[data-disabled] *) {
        --checkbox-check: Highlight;
      }
    }
  }
  .forced-colors\:group-data-focus\:text-\[HighlightText\] {
    @media (forced-colors: active) {
      &:is(:where(.group)[data-focus] *) {
        color: HighlightText;
      }
    }
  }
  .forced-colors\:data-focus\:bg-\[Highlight\] {
    @media (forced-colors: active) {
      &[data-focus] {
        background-color: Highlight;
      }
    }
  }
  .forced-colors\:data-focus\:text-\[HighlightText\] {
    @media (forced-colors: active) {
      &[data-focus] {
        color: HighlightText;
      }
    }
  }
  .forced-colors\:data-hover\:\[--btn-icon\:ButtonText\] {
    @media (forced-colors: active) {
      &[data-hover] {
        --btn-icon: ButtonText;
      }
    }
  }
  .forced-colors\:\*\:data-\[slot\=icon\]\:text-\[CanvasText\] {
    @media (forced-colors: active) {
      :is(& > *) {
        &[data-slot="icon"] {
          color: CanvasText;
        }
      }
    }
  }
  .forced-colors\:group-data-focus\/option\:\*\:data-\[slot\=icon\]\:text-\[Canvas\] {
    @media (forced-colors: active) {
      &:is(:where(.group\/option)[data-focus] *) {
        :is(& > *) {
          &[data-slot="icon"] {
            color: Canvas;
          }
        }
      }
    }
  }
  .forced-colors\:data-focus\:\*\:data-\[slot\=icon\]\:text-\[HighlightText\] {
    @media (forced-colors: active) {
      &[data-focus] {
        :is(& > *) {
          &[data-slot="icon"] {
            color: HighlightText;
          }
        }
      }
    }
  }
  .dark\:forced-colors\:\[--checkbox-check\:HighlightText\] {
    @media (prefers-color-scheme: dark) {
      @media (forced-colors: active) {
        --checkbox-check: HighlightText;
      }
    }
  }
  .dark\:forced-colors\:\[--checkbox-checked-bg\:Highlight\] {
    @media (prefers-color-scheme: dark) {
      @media (forced-colors: active) {
        --checkbox-checked-bg: Highlight;
      }
    }
  }
  .dark\:forced-colors\:\[--switch-bg\:Highlight\] {
    @media (prefers-color-scheme: dark) {
      @media (forced-colors: active) {
        --switch-bg: Highlight;
      }
    }
  }
  .dark\:forced-colors\:group-data-disabled\:\[--checkbox-check\:Highlight\] {
    @media (prefers-color-scheme: dark) {
      @media (forced-colors: active) {
        &:is(:where(.group)[data-disabled] *) {
          --checkbox-check: Highlight;
        }
      }
    }
  }
  .prose-h1\:mt-2 {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .prose-h1\:font-display {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-display);
    }
  }
  .prose-h1\:font-serif {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-serif);
    }
  }
  .prose-h2\:font-serif {
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-serif);
    }
  }
  .prose-h3\:font-display {
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-display);
    }
  }
  .prose-h4\:font-serif {
    & :is(:where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-serif);
    }
  }
  .has-\[\[data-slot\=icon\]\:first-child\]\:\[\&_input\]\:pl-10 {
    &:has(*:is([data-slot=icon]:first-child)) {
      & input {
        padding-left: calc(var(--spacing) * 10);
      }
    }
  }
  .has-\[\[data-slot\=icon\]\:last-child\]\:\[\&_input\]\:pr-10 {
    &:has(*:is([data-slot=icon]:last-child)) {
      & input {
        padding-right: calc(var(--spacing) * 10);
      }
    }
  }
  .sm\:has-\[\[data-slot\=icon\]\:first-child\]\:\[\&_input\]\:pl-8 {
    @media (width >= 40rem) {
      &:has(*:is([data-slot=icon]:first-child)) {
        & input {
          padding-left: calc(var(--spacing) * 8);
        }
      }
    }
  }
  .sm\:has-\[\[data-slot\=icon\]\:last-child\]\:\[\&_input\]\:pr-8 {
    @media (width >= 40rem) {
      &:has(*:is([data-slot=icon]:last-child)) {
        & input {
          padding-right: calc(var(--spacing) * 8);
        }
      }
    }
  }
  .\[\&_optgroup\]\:font-semibold {
    & optgroup {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\[\&\:\:-webkit-date-and-time-value\]\:min-h-\[1\.5em\] {
    &::-webkit-date-and-time-value {
      min-height: 1.5em;
    }
  }
  .\[\&\:\:-webkit-datetime-edit\]\:inline-flex {
    &::-webkit-datetime-edit {
      display: inline-flex;
    }
  }
  .\[\&\:\:-webkit-datetime-edit\]\:p-0 {
    &::-webkit-datetime-edit {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-day-field\]\:p-0 {
    &::-webkit-datetime-edit-day-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-fields-wrapper\]\:p-0 {
    &::-webkit-datetime-edit-fields-wrapper {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-hour-field\]\:p-0 {
    &::-webkit-datetime-edit-hour-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-meridiem-field\]\:p-0 {
    &::-webkit-datetime-edit-meridiem-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-millisecond-field\]\:p-0 {
    &::-webkit-datetime-edit-millisecond-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-minute-field\]\:p-0 {
    &::-webkit-datetime-edit-minute-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-month-field\]\:p-0 {
    &::-webkit-datetime-edit-month-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-second-field\]\:p-0 {
    &::-webkit-datetime-edit-second-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\:\:-webkit-datetime-edit-year-field\]\:p-0 {
    &::-webkit-datetime-edit-year-field {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\[\&\>\*\+\[data-slot\=control\]\]\:mt-6 {
    &>*+[data-slot=control] {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .\[\&\>\[data-slot\=control\]\+\[data-slot\=description\]\]\:mt-3 {
    &>[data-slot=control]+[data-slot=description] {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>\[data-slot\=control\]\+\[data-slot\=error\]\]\:mt-3 {
    &>[data-slot=control]+[data-slot=error] {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>\[data-slot\=description\]\+\[data-slot\=control\]\]\:mt-3 {
    &>[data-slot=description]+[data-slot=control] {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>\[data-slot\=icon\]\:first-child\]\:left-3 {
    &>[data-slot=icon]:first-child {
      left: calc(var(--spacing) * 3);
    }
  }
  .sm\:\[\&\>\[data-slot\=icon\]\:first-child\]\:left-2\.5 {
    @media (width >= 40rem) {
      &>[data-slot=icon]:first-child {
        left: calc(var(--spacing) * 2.5);
      }
    }
  }
  .\[\&\>\[data-slot\=icon\]\:last-child\]\:right-3 {
    &>[data-slot=icon]:last-child {
      right: calc(var(--spacing) * 3);
    }
  }
  .sm\:\[\&\>\[data-slot\=icon\]\:last-child\]\:right-2\.5 {
    @media (width >= 40rem) {
      &>[data-slot=icon]:last-child {
        right: calc(var(--spacing) * 2.5);
      }
    }
  }
  .\[\&\>\[data-slot\=label\]\+\[data-slot\=control\]\]\:mt-3 {
    &>[data-slot=label]+[data-slot=control] {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>\[data-slot\=label\]\+\[data-slot\=description\]\]\:mt-1 {
    &>[data-slot=label]+[data-slot=description] {
      margin-top: calc(var(--spacing) * 1);
    }
  }
  .\[\&\>\[data-slot\=section\]\+\[data-slot\=section\]\]\:mt-2\.5 {
    &>[data-slot=section]+[data-slot=section] {
      margin-top: calc(var(--spacing) * 2.5);
    }
  }
  .\[\&\>\[data-slot\=section\]\+\[data-slot\=section\]\]\:mt-8 {
    &>[data-slot=section]+[data-slot=section] {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .\[\@media\(pointer\:fine\)\]\:hidden {
    @media (pointer:fine) {
      display: none;
    }
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
}
@layer base {
  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    @supports (color: color-mix(in lab, red, red)) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
